#! /usr/bin/env bash
# Patch: -common_powerpc_Fix_PCI_Express
# Date: Wed Jun 20 09:53:56 2007
# Source: MontaVista Software, Inc.
# MR: 22933
# Type: Enhancement
# Disposition: needs submitting to Freescale
# Signed-off-by: Randy Vinson <rvinson@mvista.com>
# Description:
# Fix PCI Express on the MPC8548CDS.
# 
# These changes get PCI Express working using a method suggested by Kumar Gala.
# 
#  arch/powerpc/kernel/pci_32.c      |    9 +++++++++
#  arch/powerpc/platforms/85xx/pci.c |   13 +++++++++++--
#  arch/powerpc/sysdev/fsl_pcie.c    |   34 ++++++++++------------------------
#  3 files changed, 30 insertions(+), 26 deletions(-)
# 

PATCHNUM=60
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 22933
Type: Enhancement
Disposition: needs submitting to Freescale
Signed-off-by: Randy Vinson <rvinson@mvista.com>
Description:
Fix PCI Express on the MPC8548CDS.

These changes get PCI Express working using a method suggested by Kumar Gala.

 arch/powerpc/kernel/pci_32.c      |    9 +++++++++
 arch/powerpc/platforms/85xx/pci.c |   13 +++++++++++--
 arch/powerpc/sysdev/fsl_pcie.c    |   34 ++++++++++------------------------
 mvl_patches/pro50-0060.c          |   16 ++++++++++++++++
 4 files changed, 46 insertions(+), 26 deletions(-)

Index: linux-2.6.18/arch/powerpc/kernel/pci_32.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/kernel/pci_32.c
+++ linux-2.6.18/arch/powerpc/kernel/pci_32.c
@@ -94,6 +94,15 @@ DECLARE_PCI_FIXUP_EARLY(0x3fff, 0x1957, 
 DECLARE_PCI_FIXUP_EARLY(0xff3f, 0x5719, skip_fake_bridge);
 
 
+static void __devinit early_fsl_pcie(struct pci_dev *dev)
+{
+	dev->class &= 0xff;
+	dev->class |= (PCI_CLASS_BRIDGE_PCI << 8);
+}
+
+DECLARE_PCI_FIXUP_EARLY(0x1957, 0x0012, early_fsl_pcie);
+DECLARE_PCI_FIXUP_EARLY(0x1957, 0x0013, early_fsl_pcie);
+
 static void
 pcibios_fixup_resources(struct pci_dev *dev)
 {
Index: linux-2.6.18/arch/powerpc/platforms/85xx/pci.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/85xx/pci.c
+++ linux-2.6.18/arch/powerpc/platforms/85xx/pci.c
@@ -125,10 +125,17 @@ static void __init
 mpc85xx_setup_pcie(struct pci_controller *hose)
 {
 	u16 temps;
+	u32 buses;
+
 	early_read_config_word(hose, 0, 0, PCI_COMMAND, &temps);
 	temps |= PCI_COMMAND_SERR | PCI_COMMAND_MASTER | PCI_COMMAND_MEMORY;
 	early_write_config_word(hose, 0, 0, PCI_COMMAND, temps);
 	early_write_config_byte(hose, 0, 0, PCI_LATENCY_TIMER, 0x80);
+
+	early_read_config_dword(hose, 0, 0, PCI_PRIMARY_BUS, &buses);
+	buses = (buses & 0xff000000) | hose->first_busno << 0 |
+		(hose->first_busno + 1) << 8 | hose->last_busno << 16;
+	early_write_config_dword(hose, 0, 0, PCI_PRIMARY_BUS, buses);
 }
 
 int __init add_bridge(struct device_node *dev)
@@ -180,8 +187,6 @@ int __init add_bridge(struct device_node
 		mpc85xx_setup_pcie(hose);
 		primary = 0;
 		hose->bus_offset = hose->first_busno;
-		/* Setup PEX window registers */
-		setup_pcie_atmu(hose, &rsrc);
 	}
 
 	printk(KERN_INFO "Found MPC85xx PCI host bridge at 0x%016llx. "
@@ -196,6 +201,10 @@ int __init add_bridge(struct device_node
 	/* This also maps the I/O region and sets isa_io/mem_base */
 	pci_process_bridge_OF_ranges(hose, dev, primary);
 
+	/* PEX */
+	if ((rsrc.start & 0xfffff) == 0xa000)
+		/* Setup PEX window registers */
+		setup_pcie_atmu(hose, &rsrc);
 	return 0;
 }
 #endif
Index: linux-2.6.18/arch/powerpc/sysdev/fsl_pcie.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/fsl_pcie.c
+++ linux-2.6.18/arch/powerpc/sysdev/fsl_pcie.c
@@ -50,23 +50,16 @@ indirect_read_config_pcie(struct pci_bus
 		return PCIBIOS_DEVICE_NOT_FOUND;
 
 	PCI_CFG_OUT(hose->cfg_addr, 0x80000000 | 0x4 << 24
-		| (0 << 16) | (0x4 & 0xfc));
+		| (hose->first_busno << 16) | (0x4 & 0xfc));
 	link_training_stat = in_le32(hose->cfg_data);
 	if ((link_training_stat & 0x5f) < 0x16)  /* Training failure */
 		return PCIBIOS_DEVICE_NOT_FOUND;
 
 	PCIE_FIX;
-	if (bus->number == 0xff || bus->number == hose->bus_offset) {
-		PCI_CFG_OUT(hose->cfg_addr,
-			    (0x80000000 | ((offset & 0xf00) << 16) |
-			     ((bus->number - hose->bus_offset) << 16)
-			     | (devfn << 8) | ((offset & 0xfc) )));
-	} else {
-		PCI_CFG_OUT(hose->cfg_addr,
-			    (0x80000001 | ((offset & 0xf00) << 16) |
-			     (bus->number << 16)
-			     | (devfn << 8) | ((offset & 0xfc) )));
-	}
+	PCI_CFG_OUT(hose->cfg_addr,
+			(0x80000000 | ((offset & 0xf00) << 16) |
+			 (bus->number << 16)
+			 | (devfn << 8) | ((offset & 0xfc) )));
 
 	/*
 	 * Note: the caller has already checked that offset is
@@ -108,23 +101,16 @@ indirect_write_config_pcie(struct pci_bu
 		return PCIBIOS_DEVICE_NOT_FOUND;
 
 	PCI_CFG_OUT(hose->cfg_addr, 0x80000000 | 0x4 << 24
-		| (0 << 16) | (0x4 & 0xfc));
+		| (hose->first_busno << 16) | (0x4 & 0xfc));
 	link_training_stat = in_le32(hose->cfg_data);
 	if ((link_training_stat & 0x5f) < 0x16)  /* Training failure */
 		return PCIBIOS_DEVICE_NOT_FOUND;
 
 	PCIE_FIX;
-	if (bus->number == 0xff || bus->number == hose->bus_offset) {
-		PCI_CFG_OUT(hose->cfg_addr,
-			    (0x80000000 | ((offset & 0xf00) << 16) |
-			     ((bus->number - hose->bus_offset) << 16)
-			     | (devfn << 8) | ((offset & 0xfc) )));
-	} else {
-		PCI_CFG_OUT(hose->cfg_addr,
-			    (0x80000001 | ((offset & 0xf00) << 16) |
-			     (bus->number << 16)
-			     | (devfn << 8) | ((offset & 0xfc) )));
-        }
+	PCI_CFG_OUT(hose->cfg_addr,
+			(0x80000000 | ((offset & 0xf00) << 16) |
+			 (bus->number << 16)
+			 | (devfn << 8) | ((offset & 0xfc) )));
 
 	/*
 	 * Note: the caller has already checked that offset is
Index: linux-2.6.18/mvl_patches/pro50-0060.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-0060.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(60);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

