#! /usr/bin/env bash
# Patch: -powerpc_85xx_86xx_refactor_rstcr_reset_code
# Date: Mon Jul 21 10:30:21 2008
# Source: kernel.org
# MR: 28288
# Type: Enhancement
# Disposition: backport from 2.6.24-rc1 (e1c1575f831ab2165732037e6d664010a0149730)
# Signed-off-by: Anton Vorontsov <avorontsov@ru.mvista.com>
# Description:
# 
# commit e1c1575f831ab2165732037e6d664010a0149730
# Author: Kumar Gala <galak@kernel.crashing.org>
# Date:   Thu Oct 4 01:04:57 2007 -0500
# 
#     [POWERPC] 85xx/86xx: refactor RSTCR reset code
#     
#     On the majority of 85xx & 86xx we have a register that's ability to
#     assert HRESET_REQ to reset the board.  We refactored that code so it
#     can be shared between both platforms into fsl_soc.c and removed all
#     the duplication in each platform directory.
#     
#     Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
# 
#  arch/powerpc/boot/dts/mpc8641_hpcn.dts     |    6 +++
#  arch/powerpc/platforms/85xx/Makefile       |    1 -
#  arch/powerpc/platforms/85xx/misc.c         |   56 ----------------------------
#  arch/powerpc/platforms/85xx/mpc85xx.h      |   17 ---------
#  arch/powerpc/platforms/85xx/mpc85xx_ads.c  |    3 +-
#  arch/powerpc/platforms/85xx/mpc85xx_cds.c  |    5 +--
#  arch/powerpc/platforms/85xx/mpc85xx_ds.c   |    5 +--
#  arch/powerpc/platforms/85xx/mpc85xx_mds.c  |    4 +-
#  arch/powerpc/platforms/86xx/mpc8610_hpcd.c |   19 +---------
#  arch/powerpc/platforms/86xx/mpc8641_hpcn.h |   21 -----------
#  arch/powerpc/platforms/86xx/mpc86xx_hpcn.c |   20 +---------
#  arch/powerpc/sysdev/fsl_soc.c              |   38 +++++++++++++++++++
#  arch/powerpc/sysdev/fsl_soc.h              |    1 +
#  13 files changed, 53 insertions(+), 143 deletions(-)
#  delete mode 100644 arch/powerpc/platforms/85xx/misc.c
#  delete mode 100644 arch/powerpc/platforms/85xx/mpc85xx.h
#  delete mode 100644 arch/powerpc/platforms/86xx/mpc8641_hpcn.h
# 
# 

PATCHNUM=1389
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: kernel.org
MR: 28288
Type: Enhancement
Disposition: backport from 2.6.24-rc1 (e1c1575f831ab2165732037e6d664010a0149730)
Signed-off-by: Anton Vorontsov <avorontsov@ru.mvista.com>
Description:

commit e1c1575f831ab2165732037e6d664010a0149730
Author: Kumar Gala <galak@kernel.crashing.org>
Date:   Thu Oct 4 01:04:57 2007 -0500

    [POWERPC] 85xx/86xx: refactor RSTCR reset code
    
    On the majority of 85xx & 86xx we have a register that's ability to
    assert HRESET_REQ to reset the board.  We refactored that code so it
    can be shared between both platforms into fsl_soc.c and removed all
    the duplication in each platform directory.
    
    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>

 arch/powerpc/boot/dts/mpc8641_hpcn.dts     |    6 +++
 arch/powerpc/platforms/85xx/Makefile       |    1 
 arch/powerpc/platforms/85xx/misc.c         |   56 -----------------------------
 arch/powerpc/platforms/85xx/mpc85xx.h      |   17 --------
 arch/powerpc/platforms/85xx/mpc85xx_ads.c  |    3 -
 arch/powerpc/platforms/85xx/mpc85xx_cds.c  |    5 +-
 arch/powerpc/platforms/85xx/mpc85xx_ds.c   |    5 +-
 arch/powerpc/platforms/85xx/mpc85xx_mds.c  |    4 --
 arch/powerpc/platforms/86xx/mpc8610_hpcd.c |   19 ---------
 arch/powerpc/platforms/86xx/mpc8641_hpcn.h |   21 ----------
 arch/powerpc/platforms/86xx/mpc86xx_hpcn.c |   20 ----------
 arch/powerpc/sysdev/fsl_soc.c              |   38 +++++++++++++++++++
 arch/powerpc/sysdev/fsl_soc.h              |    1 
 mvl_patches/pro50-1389.c                   |   16 ++++++++
 14 files changed, 69 insertions(+), 143 deletions(-)
 delete mode 100644 arch/powerpc/platforms/85xx/misc.c
 delete mode 100644 arch/powerpc/platforms/85xx/mpc85xx.h
 delete mode 100644 arch/powerpc/platforms/86xx/mpc8641_hpcn.h


Index: linux-2.6.18/arch/powerpc/boot/dts/mpc8641_hpcn.dts
===================================================================
--- linux-2.6.18.orig/arch/powerpc/boot/dts/mpc8641_hpcn.dts
+++ linux-2.6.18/arch/powerpc/boot/dts/mpc8641_hpcn.dts
@@ -224,6 +224,12 @@
 			device_type = "open-pic";
 			big-endian;
 		};
+
+		global-utilities@e0000 {
+			compatible = "fsl,mpc8641-guts";
+			reg = <e0000 1000>;
+			fsl,has-rstcr;
+		};
 	};
 
 	pci0: pcie@f8008000 {
Index: linux-2.6.18/arch/powerpc/platforms/85xx/Makefile
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/85xx/Makefile
+++ linux-2.6.18/arch/powerpc/platforms/85xx/Makefile
@@ -1,7 +1,6 @@
 #
 # Makefile for the PowerPC 85xx linux kernel.
 #
-obj-$(CONFIG_PPC_85xx)	+= misc.o
 obj-$(CONFIG_MPC8540_ADS) += mpc85xx_ads.o
 obj-$(CONFIG_MPC8560_ADS) += mpc85xx_ads.o
 obj-$(CONFIG_MPC85xx_CDS) += mpc85xx_cds.o
Index: linux-2.6.18/arch/powerpc/platforms/85xx/misc.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/85xx/misc.c
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * MPC85xx generic code.
- *
- * Maintained by Kumar Gala (see MAINTAINERS for contact information)
- *
- * Copyright 2005 Freescale Semiconductor Inc.
- *
- * This program is free software; you can redistribute  it and/or modify it
- * under  the terms of  the GNU General  Public License as published by the
- * Free Software Foundation;  either version 2 of the  License, or (at your
- * option) any later version.
- */
-#include <linux/irq.h>
-#include <linux/module.h>
-#include <asm/irq.h>
-#include <asm/io.h>
-#include <asm/prom.h>
-#include <sysdev/fsl_soc.h>
-
-static __be32 __iomem *rstcr;
-
-extern void abort(void);
-
-static __be32 __iomem *restart_reg_base;
-
-static int __init mpc85xx_rstcr(void)
-{
-	struct device_node *np;
-	np = of_find_node_by_name(NULL, "global-utilities");
-	if ((np && of_get_property(np, "fsl,has-rstcr", NULL))) {
-		const u32 *prop = of_get_property(np, "reg", NULL);
-		if (prop) {
-			/* map reset control register
-			 * 0xE00B0 is offset of reset control register
-			 */
-			rstcr = ioremap(get_immrbase() + *prop + 0xB0, 0xff);
-			if (!rstcr)
-				printk (KERN_EMERG "Error: reset control "
-						"register not mapped!\n");
-		}
-	} else
-		printk (KERN_INFO "rstcr compatible register does not exist!\n");
-	if (np)
-		of_node_put(np);
-	return 0;
-}
-
-arch_initcall(mpc85xx_rstcr);
-void mpc85xx_restart(char *cmd)
-{
-  	local_irq_disable();
-	if (rstcr)
-		/* set reset control register */
-		out_be32(rstcr, 0x2);	/* HRESET_REQ */
-	abort();
-}
Index: linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx.h
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/85xx/mpc85xx.h
+++ /dev/null
@@ -1,17 +0,0 @@
-/*
- * arch/ppc/platforms/85xx/mpc85xx.h
- *
- * MPC85xx soc definitions/function decls
- *
- * Maintainer: Kumar Gala <kumar.gala@freescale.com>
- *
- * Copyright 2005 Freescale Semiconductor Inc.
- *
- * This program is free software; you can redistribute  it and/or modify it
- * under  the terms of  the GNU General  Public License as published by the
- * Free Software Foundation;  either version 2 of the  License, or (at your
- * option) any later version.
- *
- */
-
-extern void mpc85xx_restart(char *);
Index: linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx_ads.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/85xx/mpc85xx_ads.c
+++ linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx_ads.c
@@ -32,7 +32,6 @@
 
 #include <sysdev/fsl_soc.h>
 #include <sysdev/fsl_pci.h>
-#include "mpc85xx.h"
 
 #ifdef CONFIG_CPM2
 #include <linux/fs_enet_pd.h>
@@ -265,7 +264,7 @@ define_machine(mpc85xx_ads) {
 	.init_IRQ		= mpc85xx_ads_pic_init,
 	.show_cpuinfo		= mpc85xx_ads_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
-	.restart		= mpc85xx_restart,
+	.restart		= fsl_rstcr_restart,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
Index: linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx_cds.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/85xx/mpc85xx_cds.c
+++ linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx_cds.c
@@ -50,7 +50,6 @@
 
 #include <sysdev/fsl_soc.h>
 #include <sysdev/fsl_pci.h>
-#include "mpc85xx.h"
 
 static int cds_pci_slot = 2;
 static volatile u8 *cadmus;
@@ -76,7 +75,7 @@ static void mpc85xx_cds_restart(char *cm
 	 *  We shouldn't get here, since the above should have done a full
 	 *  reset, but just in case...
 	 */
-	mpc85xx_restart(NULL);
+	fsl_rstcr_restart(NULL);
 }
 
 static int mpc85xx_exclude_device(struct pci_controller *hose,
@@ -349,7 +348,7 @@ define_machine(mpc85xx_cds) {
 	.restart	= mpc85xx_cds_restart,
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 #else
-	.restart	= mpc85xx_restart,
+	.restart	= fsl_rstcr_restart,
 #endif
 	.calibrate_decr = generic_calibrate_decr,
 	.progress	= udbg_progress,
Index: linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx_ds.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/85xx/mpc85xx_ds.c
+++ linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx_ds.c
@@ -34,7 +34,6 @@
 
 #include <sysdev/fsl_soc.h>
 #include <sysdev/fsl_pci.h>
-#include "mpc85xx.h"
 
 #undef DEBUG
 
@@ -256,7 +255,7 @@ define_machine(mpc8544_ds) {
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 #endif
 	.get_irq		= mpic_get_irq,
-	.restart		= mpc85xx_restart,
+	.restart		= fsl_rstcr_restart,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
@@ -270,7 +269,7 @@ define_machine(mpc8572_ds) {
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 #endif
 	.get_irq		= mpic_get_irq,
-	.restart		= mpc85xx_restart,
+	.restart		= fsl_rstcr_restart,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
Index: linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx_mds.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/85xx/mpc85xx_mds.c
+++ linux-2.6.18/arch/powerpc/platforms/85xx/mpc85xx_mds.c
@@ -51,8 +51,6 @@
 #include <asm/qe_ic.h>
 #include <asm/mpic.h>
 
-#include "mpc85xx.h"
-
 #undef DEBUG
 #ifdef DEBUG
 #define DBG(fmt...) udbg_printf(fmt)
@@ -219,7 +217,7 @@ define_machine(mpc8568_mds) {
 	.setup_arch	= mpc8568_mds_setup_arch,
 	.init_IRQ	= mpc8568_mds_pic_init,
 	.get_irq	= mpic_get_irq,
-	.restart	= mpc85xx_restart,
+	.restart	= fsl_rstcr_restart,
 	.calibrate_decr	= generic_calibrate_decr,
 	.progress	= udbg_progress,
 #ifdef CONFIG_PCI
Index: linux-2.6.18/arch/powerpc/platforms/86xx/mpc8610_hpcd.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/86xx/mpc8610_hpcd.c
+++ linux-2.6.18/arch/powerpc/platforms/86xx/mpc8610_hpcd.c
@@ -37,8 +37,6 @@
 #include <sysdev/fsl_pci.h>
 #include <sysdev/fsl_soc.h>
 
-#define MPC86XX_RSTCR_OFFSET	(0xe00b0)	/* Reset Control Register */
-
 void __init
 mpc86xx_hpcd_init_irq(void)
 {
@@ -187,21 +185,6 @@ static int __init mpc86xx_hpcd_probe(voi
 	return 0;
 }
 
-void
-mpc86xx_restart(char *cmd)
-{
-	void __iomem *rstcr;
-
-	rstcr = ioremap(get_immrbase() + MPC86XX_RSTCR_OFFSET, 0x100);
-
-	local_irq_disable();
-
-	/* Assert reset request to Reset Control Register */
-	out_be32(rstcr, 0x2);
-
-	/* not reached */
-}
-
 long __init
 mpc86xx_time_init(void)
 {
@@ -225,7 +208,7 @@ define_machine(mpc86xx_hpcd) {
 	.setup_arch		= mpc86xx_hpcd_setup_arch,
 	.init_IRQ		= mpc86xx_hpcd_init_irq,
 	.get_irq		= mpic_get_irq,
-	.restart		= mpc86xx_restart,
+	.restart		= fsl_rstcr_restart,
 	.time_init		= mpc86xx_time_init,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
Index: linux-2.6.18/arch/powerpc/platforms/86xx/mpc8641_hpcn.h
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/86xx/mpc8641_hpcn.h
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * MPC8641 HPCN board definitions
- *
- * Copyright 2006 Freescale Semiconductor Inc.
- *
- * This program is free software; you can redistribute  it and/or modify it
- * under  the terms of  the GNU General  Public License as published by the
- * Free Software Foundation;  either version 2 of the  License, or (at your
- * option) any later version.
- *
- * Author: Xianghua Xiao <x.xiao@freescale.com>
- */
-
-#ifndef __MPC8641_HPCN_H__
-#define __MPC8641_HPCN_H__
-
-#include <linux/init.h>
-
-#define MPC86XX_RSTCR_OFFSET	(0xe00b0)	/* Reset Control Register */
-
-#endif	/* __MPC8641_HPCN_H__ */
Index: linux-2.6.18/arch/powerpc/platforms/86xx/mpc86xx_hpcn.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/86xx/mpc86xx_hpcn.c
+++ linux-2.6.18/arch/powerpc/platforms/86xx/mpc86xx_hpcn.c
@@ -35,7 +35,6 @@
 #include <sysdev/fsl_soc.h>
 
 #include "mpc86xx.h"
-#include "mpc8641_hpcn.h"
 
 #undef DEBUG
 
@@ -242,23 +241,6 @@ static int __init mpc86xx_hpcn_probe(voi
 	return 0;
 }
 
-
-void
-mpc86xx_restart(char *cmd)
-{
-	void __iomem *rstcr;
-
-	rstcr = ioremap(get_immrbase() + MPC86XX_RSTCR_OFFSET, 0x100);
-
-	local_irq_disable();
-
-	/* Assert reset request to Reset Control Register */
-	out_be32(rstcr, 0x2);
-
-	/* not reached */
-}
-
-
 long __init
 mpc86xx_time_init(void)
 {
@@ -283,7 +265,7 @@ define_machine(mpc86xx_hpcn) {
 	.init_IRQ		= mpc86xx_hpcn_init_irq,
 	.show_cpuinfo		= mpc86xx_hpcn_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
-	.restart		= mpc86xx_restart,
+	.restart		= fsl_rstcr_restart,
 	.time_init		= mpc86xx_time_init,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
Index: linux-2.6.18/arch/powerpc/sysdev/fsl_soc.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/fsl_soc.c
+++ linux-2.6.18/arch/powerpc/sysdev/fsl_soc.c
@@ -1444,3 +1444,41 @@ err:
 
 	return spi_register_board_info(board_infos, num_board_infos);
 }
+
+#if defined(CONFIG_PPC_85xx) || defined(CONFIG_PPC_86xx)
+static __be32 __iomem *rstcr;
+
+static int __init setup_rstcr(void)
+{
+	struct device_node *np;
+	np = of_find_node_by_name(NULL, "global-utilities");
+	if ((np && of_get_property(np, "fsl,has-rstcr", NULL))) {
+		const u32 *prop = of_get_property(np, "reg", NULL);
+		if (prop) {
+			/* map reset control register
+			 * 0xE00B0 is offset of reset control register
+			 */
+			rstcr = ioremap(get_immrbase() + *prop + 0xB0, 0xff);
+			if (!rstcr)
+				printk (KERN_EMERG "Error: reset control "
+						"register not mapped!\n");
+		}
+	} else
+		printk (KERN_INFO "rstcr compatible register does not exist!\n");
+	if (np)
+		of_node_put(np);
+	return 0;
+}
+
+arch_initcall(setup_rstcr);
+
+void fsl_rstcr_restart(char *cmd)
+{
+	local_irq_disable();
+	if (rstcr)
+		/* set reset control register */
+		out_be32(rstcr, 0x2);	/* HRESET_REQ */
+
+	while (1) ;
+}
+#endif
Index: linux-2.6.18/arch/powerpc/sysdev/fsl_soc.h
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/fsl_soc.h
+++ linux-2.6.18/arch/powerpc/sysdev/fsl_soc.h
@@ -48,5 +48,6 @@ extern int fsl_spi_init(struct spi_board
 			void (*activate_cs)(u8 cs, u8 polarity),
 			void (*deactivate_cs)(u8 cs, u8 polarity));
 
+extern void fsl_rstcr_restart(char *cmd);
 #endif
 #endif
Index: linux-2.6.18/mvl_patches/pro50-1389.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1389.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1389);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

