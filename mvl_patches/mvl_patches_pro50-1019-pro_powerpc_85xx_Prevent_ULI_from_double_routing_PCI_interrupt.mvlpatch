#! /usr/bin/env bash
# Patch: -pro_powerpc_85xx_Prevent_ULI_from_double_routing_PCI_interrupt
# Date: Wed Apr  9 10:01:05 2008
# Source: MontaVista Software, Inc.
# MR: 26902
# Type: Defect Fix
# Disposition: needs submitting to Freescale.
# Signed-off-by: Randy Vinson <rvison@mvista.com>
# Description:
# Prevent 8572 from double routing PCI interrupts.
# 
# PCI interrupts are routed to both the 8259 in the ULI and to the MPIC in
# 8572. This can cause double interrupts if the ULI's USB controllers are used
# and a PCI device in slot 1 or 2 shares the interrupt. Note that because
# the interrupt routing code is common to the 8572, 8544 and the 8641, DTS
# changes were reuired for all 3 boards.
# 
# Signed-off-by Randy Vinson <rvinson@mvista.com>
# 

PATCHNUM=1019
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 26902
Type: Defect Fix
Disposition: needs submitting to Freescale.
Signed-off-by: Randy Vinson <rvison@mvista.com>
Description:
Prevent 8572 from double routing PCI interrupts.

PCI interrupts are routed to both the 8259 in the ULI and to the MPIC in
8572. This can cause double interrupts if the ULI's USB controllers are used
and a PCI device in slot 1 or 2 shares the interrupt. Note that because
the interrupt routing code is common to the 8572, 8544 and the 8641, DTS
changes were reuired for all 3 boards.

Signed-off-by Randy Vinson <rvinson@mvista.com>

Index: linux-2.6.18/arch/powerpc/platforms/fsl_uli1575.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/fsl_uli1575.c
+++ linux-2.6.18/arch/powerpc/platforms/fsl_uli1575.c
@@ -24,6 +24,7 @@
 #define ULI_PIRQE	0x0c
 #define ULI_PIRQF	0x0d
 #define ULI_PIRQG	0x0e
+#define ULI_PIRQH	0x0f
 
 #define ULI_8259_NONE	0x00
 #define ULI_8259_IRQ1	0x08
@@ -40,14 +41,14 @@
 #define ULI_8259_IRQ15	0x0f
 
 u8 uli_pirq_to_irq[8] = {
-	ULI_8259_IRQ9,		/* PIRQA */
-	ULI_8259_IRQ10,		/* PIRQB */
-	ULI_8259_IRQ11,		/* PIRQC */
-	ULI_8259_IRQ12,		/* PIRQD */
-	ULI_8259_IRQ5,		/* PIRQE */
-	ULI_8259_IRQ6,		/* PIRQF */
-	ULI_8259_IRQ7,		/* PIRQG */
-	ULI_8259_NONE,		/* PIRQH */
+	ULI_8259_NONE,		/* PIRQA */
+	ULI_8259_NONE,		/* PIRQB */
+	ULI_8259_NONE,		/* PIRQC */
+	ULI_8259_NONE,		/* PIRQD */
+	ULI_8259_IRQ9,		/* PIRQE */
+	ULI_8259_IRQ7,		/* PIRQF */
+	ULI_8259_IRQ6,		/* PIRQG */
+	ULI_8259_IRQ5,		/* PIRQH */
 };
 
 /* set in board code if you want this quirks to do something */
@@ -94,35 +95,35 @@ static void __devinit quirk_uli1575(stru
 		pci_write_config_byte(dev, 0x48 + i, val);
 	}
 
-	/* USB 1.1 OHCI controller 1: dev 28, func 0 - IRQ12 */
-	pci_write_config_byte(dev, 0x86, ULI_PIRQD);
+	/* USB 1.1 OHCI controller 1: dev 28, func 0 - IRQ5 */
+	pci_write_config_byte(dev, 0x86, ULI_PIRQH);
 
-	/* USB 1.1 OHCI controller 2: dev 28, func 1 - IRQ9 */
-	pci_write_config_byte(dev, 0x87, ULI_PIRQA);
+	/* USB 1.1 OHCI controller 2: dev 28, func 1 - IRQ6 */
+	pci_write_config_byte(dev, 0x87, ULI_PIRQG);
 
-	/* USB 1.1 OHCI controller 3: dev 28, func 2 - IRQ10 */
-	pci_write_config_byte(dev, 0x88, ULI_PIRQB);
+	/* USB 1.1 OHCI controller 3: dev 28, func 2 - IRQ7 */
+	pci_write_config_byte(dev, 0x88, ULI_PIRQF);
 
-	/* Lan controller: dev 27, func 0 - IRQ6 */
+	/* Lan controller: dev 27, func 0 - IRQ7 */
 	pci_write_config_byte(dev, 0x89, ULI_PIRQF);
 
-	/* AC97 Audio controller: dev 29, func 0 - IRQ6 */
+	/* AC97 Audio controller: dev 29, func 0 - IRQ7 */
 	pci_write_config_byte(dev, 0x8a, ULI_PIRQF);
 
-	/* Modem controller: dev 29, func 1 - IRQ6 */
+	/* Modem controller: dev 29, func 1 - IRQ7 */
 	pci_write_config_byte(dev, 0x8b, ULI_PIRQF);
 
-	/* HD Audio controller: dev 29, func 2 - IRQ6 */
+	/* HD Audio controller: dev 29, func 2 - IRQ7 */
 	pci_write_config_byte(dev, 0x8c, ULI_PIRQF);
 
-	/* SATA controller: dev 31, func 1 - IRQ5 */
+	/* SATA controller: dev 31, func 1 - IRQ9 */
 	pci_write_config_byte(dev, 0x8d, ULI_PIRQE);
 
 	/* SMB interrupt: dev 30, func 1 - IRQ7 */
-	pci_write_config_byte(dev, 0x8e, ULI_PIRQG);
+	pci_write_config_byte(dev, 0x8e, ULI_PIRQF);
 
 	/* PMU ACPI SCI interrupt: dev 30, func 2 - IRQ7 */
-	pci_write_config_byte(dev, 0x8f, ULI_PIRQG);
+	pci_write_config_byte(dev, 0x8f, ULI_PIRQF);
 
 	/* USB 2.0 controller: dev 28, func 3 */
 	pci_write_config_byte(dev, 0x74, ULI_8259_IRQ11);
Index: linux-2.6.18/arch/powerpc/boot/dts/mpc8572ds.dts
===================================================================
--- linux-2.6.18.orig/arch/powerpc/boot/dts/mpc8572ds.dts
+++ linux-2.6.18/arch/powerpc/boot/dts/mpc8572ds.dts
@@ -330,13 +330,13 @@
 			9700 0 0 4 &mpic 2 1
 
 			// IDSEL 0x1c  USB
-			e000 0 0 1 &i8259 c 2
-			e100 0 0 2 &i8259 9 2
-			e200 0 0 3 &i8259 a 2
+			e000 0 0 1 &i8259 5 2
+			e100 0 0 2 &i8259 6 2
+			e200 0 0 3 &i8259 7 2
 			e300 0 0 4 &i8259 b 2
 
 			// IDSEL 0x1d  Audio
-			e800 0 0 1 &i8259 6 2
+			e800 0 0 1 &i8259 7 2
 
 			// IDSEL 0x1e Legacy
 			f000 0 0 1 &i8259 7 2
@@ -344,8 +344,7 @@
 
 			// IDSEL 0x1f IDE/SATA
 			f800 0 0 1 &i8259 e 2
-			f900 0 0 1 &i8259 5 2
-
+			f900 0 0 1 &i8259 9 2
 			>;
 
 		pcie@0 {
Index: linux-2.6.18/arch/powerpc/boot/dts/mpc8544ds.dts
===================================================================
--- linux-2.6.18.orig/arch/powerpc/boot/dts/mpc8544ds.dts
+++ linux-2.6.18/arch/powerpc/boot/dts/mpc8544ds.dts
@@ -275,13 +275,13 @@
 		interrupt-map-mask = <ff00 0 0 1>;
 		interrupt-map = <
 			// IDSEL 0x1c  USB
-			e000 0 0 1 &i8259 c 2
-			e100 0 0 2 &i8259 9 2
-			e200 0 0 3 &i8259 a 2
+			e000 0 0 1 &i8259 5 2
+			e100 0 0 2 &i8259 6 2
+			e200 0 0 3 &i8259 7 2
 			e300 0 0 4 &i8259 b 2
 
 			// IDSEL 0x1d  Audio
-			e800 0 0 1 &i8259 6 2
+			e800 0 0 1 &i8259 7 2
 
 			// IDSEL 0x1e Legacy
 			f000 0 0 1 &i8259 7 2
@@ -289,7 +289,7 @@
 
 			// IDSEL 0x1f IDE/SATA
 			f800 0 0 1 &i8259 e 2
-			f900 0 0 1 &i8259 5 2
+			f900 0 0 1 &i8259 9 2
 		>;
 
 		pcie@0 {
Index: linux-2.6.18/arch/powerpc/boot/dts/mpc8641_hpcn.dts
===================================================================
--- linux-2.6.18.orig/arch/powerpc/boot/dts/mpc8641_hpcn.dts
+++ linux-2.6.18/arch/powerpc/boot/dts/mpc8641_hpcn.dts
@@ -328,13 +328,13 @@
 			9700 0 0 4 &mpic 2 1
 
 			// IDSEL 0x1c  USB
-			e000 0 0 1 &i8259 c 2
-			e100 0 0 2 &i8259 9 2
-			e200 0 0 3 &i8259 a 2
+			e000 0 0 1 &i8259 5 2
+			e100 0 0 2 &i8259 6 2
+			e200 0 0 3 &i8259 7 2
 			e300 0 0 4 &i8259 b 2
 
 			// IDSEL 0x1d  Audio
-			e800 0 0 1 &i8259 6 2
+			e800 0 0 1 &i8259 7 2
 
 			// IDSEL 0x1e Legacy
 			f000 0 0 1 &i8259 7 2
@@ -342,7 +342,7 @@
 
 			// IDSEL 0x1f IDE/SATA
 			f800 0 0 1 &i8259 e 2
-			f900 0 0 1 &i8259 5 2
+			f900 0 0 1 &i8259 9 2
 			>;
 
 		pcie@0 {
Index: linux-2.6.18/mvl_patches/pro50-1019.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1019.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1019);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

