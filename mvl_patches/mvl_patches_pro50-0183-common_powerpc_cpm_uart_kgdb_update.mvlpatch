#! /usr/bin/env bash
# Patch: -common_powerpc_cpm_uart_kgdb_update
# Date: Wed Sep 26 11:10:45 2007
# Source: MontaVista Software, Inc.
# MR: 23321
# Type: Enhancement
# Disposition: needs submitting to kgdb community
# Signed-off-by: Yuri Shpilevsky <yshpilevsky@ru.mvista.com>
# Description:
#     cpm-uart driver gets from device tree some properties to initialize serial ports.
#     But in the arch/powerpc stuff the kgdb needs the initialized port before unflatten device tree 
#     is created. So properties for early port setup should be taken from flat device tree.
#     Functions to implement this were added.
#     Some variables saving dts properties were set as global to make its accessible from kgdb.
#     KGDB baud rate definition was changed to be compatible with existing style.
#     Patch also adds early IO pins initialization and excludes double port setup 
#     if kgdb and console use the same port. 
# 

PATCHNUM=183
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 23321
Type: Enhancement
Disposition: needs submitting to kgdb community
Signed-off-by: Yuri Shpilevsky <yshpilevsky@ru.mvista.com>
Description:
    cpm-uart driver gets from device tree some properties to initialize serial ports.
    But in the arch/powerpc stuff the kgdb needs the initialized port before unflatten device tree 
    is created. So properties for early port setup should be taken from flat device tree.
    Functions to implement this were added.
    Some variables saving dts properties were set as global to make its accessible from kgdb.
    KGDB baud rate definition was changed to be compatible with existing style.
    Patch also adds early IO pins initialization and excludes double port setup 
    if kgdb and console use the same port. 

Index: linux-2.6.18/drivers/serial/cpm_uart/cpm_uart.h
===================================================================
--- linux-2.6.18.orig/drivers/serial/cpm_uart/cpm_uart.h
+++ linux-2.6.18/drivers/serial/cpm_uart/cpm_uart.h
@@ -54,29 +54,19 @@
 #ifdef CONFIG_KGDB_CPM_UART
 
 /* Speed of the debug UART. */
-#if defined(CONFIG_KGDB_9600BAUD)
-#define KGDB_BAUD B9600
-#elif defined(CONFIG_KGDB_19200BAUD)
-#define KGDB_BAUD B19200
-#elif defined(CONFIG_KGDB_38400BAUD)
-#define KGDB_BAUD B38400
-#elif defined(CONFIG_KGDB_57600BAUD)
-#define KGDB_BAUD B57600
-#else
-#define KGDB_BAUD B115200	/* Start with this if not given */
-#endif
+#define KGDB_BAUD_RATE CONFIG_KGDB_BAUDRATE
 
-#ifdef CONFIG_KGDB_CPM_UART_SCC1
+#if defined(CONFIG_KGDB_CPM_UART_SCC1)
 #define KGDB_PINFO_INDEX 	UART_SCC1
-#elif CONFIG_KGDB_CPM_UART_SCC2
+#elif defined(CONFIG_KGDB_CPM_UART_SCC2)
 #define KGDB_PINFO_INDEX	UART_SCC2
-#elif CONFIG_KGDB_CPM_UART_SCC3
+#elif defined(CONFIG_KGDB_CPM_UART_SCC3)
 #define KGDB_PINFO_INDEX	UART_SCC3
-#elif CONFIG_KGDB_CPM_UART_SCC4
+#elif defined(CONFIG_KGDB_CPM_UART_SCC4)
 #define KGDB_PINFO_INDEX	UART_SCC4
-#elif CONFIG_KGDB_CPM_UART_SMC1
+#elif defined(CONFIG_KGDB_CPM_UART_SMC1)
 #define KGDB_PINFO_INDEX	UART_SMC1
-#elif CONFIG_KGDB_CPM_UART_SMC2
+#elif defined(CONFIG_KGDB_CPM_UART_SMC2)
 #define KGDB_PINFO_INDEX	UART_SMC2
 #else
 #error The S(M)CC for kgdb console is undefined
Index: linux-2.6.18/drivers/serial/cpm_uart/cpm_uart_kgdb.c
===================================================================
--- linux-2.6.18.orig/drivers/serial/cpm_uart/cpm_uart_kgdb.c
+++ linux-2.6.18/drivers/serial/cpm_uart/cpm_uart_kgdb.c
@@ -25,6 +25,8 @@
 
 #include <asm/io.h>
 #include <asm/serial.h>		/* For BASE_BAUD and SERIAL_PORT_DFNS */
+#include <asm/time.h>
+#include <sysdev/fsl_soc.h>
 
 #include "cpm_uart.h"
 
@@ -35,6 +37,7 @@ static char kgdb_buf[GDB_BUF_SIZE], *kgd
 static int kgdb_chars;
 
 /* Forward declarations. */
+extern void kgdb_params_early_init(void);
 
 /*
  * Receive character from the serial port.  This only works well
@@ -58,7 +61,7 @@ static int kgdb_wait_key(char *obuf)
 	/* If the buffer address is in the CPM DPRAM, don't
 	 * convert it.
 	 */
-	cp = cpm2cpu_addr(bdp->cbd_bufaddr);
+	cp = cpm2cpu_addr(bdp->cbd_bufaddr, pinfo);
 
 	if (obuf) {
 		i = c = bdp->cbd_datlen;
@@ -86,7 +89,7 @@ static int kgdb_wait_key(char *obuf)
  * Wait until the interface can accept a char, then write it.
  */
 static void
-kgdb_put_debug_char(int chr)
+kgdb_put_debug_char(u8 chr)
 {
 	static char ch[2];
 	ch[0]=(char)chr;
@@ -111,11 +114,12 @@ kgdb_get_debug_char(void)
 }
 
 static void termios_set_options(int index,
-		 int baud, int parity, int bits, int flow)
+		 int baud_rate, int parity, int bits, int flow)
 {
 	struct termios termios;
 	struct uart_port *port;
 	struct uart_cpm_port *pinfo;
+	int baud;
 
 	BUG_ON(index>UART_NR);
 
@@ -133,6 +137,24 @@ static void termios_set_options(int inde
 
 	termios.c_cflag = CREAD | HUPCL | CLOCAL;
 
+	switch (baud_rate) {
+	case 9600:
+		baud = B9600;
+		break;
+	case 19200:
+		baud = B19200;
+		break;
+	case 38400:
+		baud = B38400;
+		break;
+	case 57600:
+		baud = B57600;
+		break;
+	case 115200:
+	default:
+		baud = B115200;
+	}
+
 	termios.c_cflag |= baud;
 
 	if (bits == 7)
@@ -163,11 +185,11 @@ static int kgdb_init(void)
 {
 	struct uart_port *port;
 	struct uart_cpm_port *pinfo;
-
 	int use_bootmem = 0; /* use dma by default */
 
-	if(!cpm_uart_nr)
-	{
+	kgdb_params_early_init();
+
+	if(!cpm_uart_nr) {
 		use_bootmem = 1;
 		cpm_uart_init_portdesc();
 	}
@@ -177,7 +199,8 @@ static int kgdb_init(void)
 	if (cpm_uart_early_setup(KGDB_PINFO_INDEX, use_bootmem))
 		return 1;
 
-	termios_set_options(KGDB_PINFO_INDEX, KGDB_BAUD,'n',8,'n');
+	termios_set_options(KGDB_PINFO_INDEX, KGDB_BAUD_RATE,'n',8,'n');
+
         if (IS_SMC(pinfo))
                 pinfo->smcp->smc_smcm |= SMCM_TX;
         else
@@ -186,10 +209,8 @@ static int kgdb_init(void)
 	return 0;
 }
 
-
 struct kgdb_io kgdb_io_ops = {
 	.read_char = kgdb_get_debug_char,
 	.write_char = kgdb_put_debug_char,
 	.init = kgdb_init,
 };
-
Index: linux-2.6.18/lib/Kconfig.kgdb
===================================================================
--- linux-2.6.18.orig/lib/Kconfig.kgdb
+++ linux-2.6.18/lib/Kconfig.kgdb
@@ -134,6 +134,37 @@ config KGDB_PXA_SERIAL
 endchoice
 
 choice
+ 	prompt "  SCC/SMC for KGDB console"
+ 	depends on KGDB_CPM_UART
+ 	default KGDB_CPM_UART_SCC4 if ADS8272
+ 	default KGDB_CPM_UART_SMC1 if MPC885ADS
+
+config KGDB_CPM_UART_SCC1
+ 	bool "Use SCC1 for KGDB"
+ 	depends on SERIAL_CPM_SCC1
+
+config KGDB_CPM_UART_SCC2
+ 	bool "Use SCC2 for KGDB"
+ 	depends on SERIAL_CPM_SCC2
+
+config KGDB_CPM_UART_SCC3
+ 	bool "Use SCC3 for KGDB"
+ 	depends on SERIAL_CPM_SCC3
+
+config KGDB_CPM_UART_SCC4
+ 	bool "Use SCC4 for KGDB"
+ 	depends on SERIAL_CPM_SCC4
+
+config KGDB_CPM_UART_SMC1
+ 	bool "Use SMC1 for KGDB"
+ 	depends on SERIAL_CPM_SMC1
+
+config KGDB_CPM_UART_SMC2
+ 	bool "Use SMC2 for KGDB"
+ 	depends on SERIAL_CPM_SMC2
+endchoice
+
+choice
 	prompt "PXA serial UART for KGDB"
 	depends on KGDB_PXA_SERIAL
 	default KGDB_PXA_FFUART
@@ -181,7 +212,7 @@ config KGDB_SIMPLE_SERIAL
 
 config KGDB_BAUDRATE
 	int "Debug serial port baud rate"
-	depends on (KGDB_8250 && KGDB_SIMPLE_SERIAL) ||	KGDB_PXA_SERIAL || KGDB_AMBA_PL011
+	depends on (KGDB_8250 && KGDB_SIMPLE_SERIAL) ||	KGDB_PXA_SERIAL || KGDB_AMBA_PL011 || KGDB_CPM_UART
 	default "115200"
 	help
 	  gdb and the kernel stub need to agree on the baud rate to be
Index: linux-2.6.18/arch/powerpc/sysdev/fsl_soc.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/fsl_soc.c
+++ linux-2.6.18/arch/powerpc/sysdev/fsl_soc.c
@@ -41,7 +41,7 @@
 extern void init_fcc_ioports(struct fs_platform_info*);
 extern void init_fec_ioports(struct fs_platform_info*);
 extern void init_smc_ioports(struct fs_uart_platform_info*);
-static phys_addr_t immrbase = -1;
+phys_addr_t immrbase = -1;
 
 phys_addr_t get_immrbase(void)
 {
@@ -67,7 +67,7 @@ EXPORT_SYMBOL(get_immrbase);
 
 #if defined(CONFIG_CPM2) || defined(CONFIG_8xx)
 
-static u32 brgfreq = -1;
+u32 brgfreq = -1;
 
 u32 get_brgfreq(void)
 {
@@ -92,7 +92,7 @@ u32 get_brgfreq(void)
 
 EXPORT_SYMBOL(get_brgfreq);
 
-static u32 fs_baudrate = -1;
+u32 fs_baudrate = -1;
 
 u32 get_baudrate(void)
 {
Index: linux-2.6.18/arch/powerpc/sysdev/fsl_soc.h
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/fsl_soc.h
+++ linux-2.6.18/arch/powerpc/sysdev/fsl_soc.h
@@ -3,10 +3,43 @@
 #ifdef __KERNEL__
 
 #include <asm/mmu.h>
+#include <asm/prom.h>
+
+extern phys_addr_t immrbase;
+extern u32 brgfreq;
+extern u32 fs_baudrate;
 
 extern phys_addr_t get_immrbase(void);
 extern u32 get_brgfreq(void);
 extern u32 get_baudrate(void);
 
+struct dsk {
+	char *dev;
+	char *prm;
+	u32 *result;
+};
+
+static inline int early_get_from_flat_dt(unsigned long node, const char *uname,
+					int depth, void *data)
+{
+	struct dsk *p = data;
+	char *type = of_get_flat_dt_prop(node, "device_type", NULL);
+	u32 *param;
+	unsigned long len;
+
+	if (type == NULL || strcmp(type, p->dev) != 0)
+		return 0;
+
+	param = of_get_flat_dt_prop(node, p->prm, &len);
+	*(p->result) = *param;
+	return 1;
+}
+
+static inline void get_from_flat_dt(char *device, char *param, void *save_in)
+{
+	struct dsk pack = { device, param, save_in };
+	of_scan_flat_dt(early_get_from_flat_dt, &pack);
+}
+
 #endif
 #endif
Index: linux-2.6.18/drivers/serial/cpm_uart/cpm_uart_core.c
===================================================================
--- linux-2.6.18.orig/drivers/serial/cpm_uart/cpm_uart_core.c
+++ linux-2.6.18/drivers/serial/cpm_uart/cpm_uart_core.c
@@ -1221,6 +1221,12 @@ static int __init cpm_uart_console_setup
 	int ret;
 	struct platform_device* pdev = early_uart_get_pdev(co->index);
 
+#ifdef CONFIG_KGDB_CPM_UART
+	/* We are not interested in ports yet utilized by kgdb */
+	if(co->index == KGDB_PINFO_INDEX)
+		return 0;
+#endif
+
 	if (!pdev) {
 		pr_info("cpm_uart: console: compat mode\n");
 		/* compatibility - will be cleaned up */
@@ -1293,6 +1299,12 @@ static int cpm_uart_drv_probe(struct dev
 
 	pdata = pdev->dev.platform_data;
 
+#ifdef CONFIG_KGDB_CPM_UART
+	/* We are not interested in ports yet utilized by kgdb */
+	if(cpm_uart_id2nr(fs_uart_get_id(pdata)) == KGDB_PINFO_INDEX)
+		return ret;
+#endif
+
 	if ((ret = cpm_uart_drv_get_platform_data(pdev, 0)))
 		return ret;
 
Index: linux-2.6.18/drivers/serial/cpm_uart/cpm_uart_cpm1.c
===================================================================
--- linux-2.6.18.orig/drivers/serial/cpm_uart/cpm_uart_cpm1.c
+++ linux-2.6.18/drivers/serial/cpm_uart/cpm_uart_cpm1.c
@@ -41,12 +41,15 @@
 #include <asm/io.h>
 #include <asm/irq.h>
 #include <asm/fs_pd.h>
+#include <asm/prom.h>
 
 #include <linux/serial_core.h>
 #include <linux/kernel.h>
 
 #include "cpm_uart.h"
 
+extern void m8xx_cpm_dpinit(void);
+
 /**************************************************************/
 
 void cpm_line_cr_cmd(int line, int cmd)
@@ -85,9 +88,19 @@ void smc1_lineif(struct uart_cpm_port *p
 {
 	/* XXX SMC1: insert port configuration here */
 	unsigned *bcsr_io;
+	cpm8xx_t *cp;
 	pinfo->brg = 1;
 
 #if defined (CONFIG_MPC885ADS) || defined (CONFIG_MPC86XADS)
+#if defined(CONFIG_MPC885ADS)
+	cp = (cpm8xx_t *)immr_map(im_cpm);
+	setbits32(&cp->cp_pepar, 0x000000c0);
+	clrbits32(&cp->cp_pedir, 0x000000c0);
+	clrbits32(&cp->cp_peso, 0x00000040);
+	setbits32(&cp->cp_peso, 0x00000080);
+	immr_unmap(cp);
+#endif
+
 	bcsr_io = ioremap(BCSR1, sizeof(unsigned long));
 
 	if (bcsr_io == NULL) {
@@ -103,9 +116,19 @@ void smc2_lineif(struct uart_cpm_port *p
 {
 	/* XXX SMC2: insert port configuration here */
 	unsigned *bcsr_io;
+	cpm8xx_t *cp;
 	pinfo->brg = 2;
 
 #if defined (CONFIG_MPC885ADS) || defined (CONFIG_MPC86XADS)
+#if defined(CONFIG_MPC885ADS)
+	cp = (cpm8xx_t *)immr_map(im_cpm);
+	setbits32(&cp->cp_pepar, 0x00000c00);
+	clrbits32(&cp->cp_pedir, 0x00000c00);
+	clrbits32(&cp->cp_peso, 0x00000400);
+	setbits32(&cp->cp_peso, 0x00000800);
+	immr_unmap(cp);
+#endif
+
 	bcsr_io = ioremap(BCSR1, sizeof(unsigned long));
 
 	if (bcsr_io == NULL) {
@@ -309,3 +332,17 @@ int cpm_uart_init_portdesc(void)
 #endif
 	return 0;
 }
+
+static char tmp_sw_page[0x1800];
+
+void kgdb_params_early_init(void)
+{
+	mtspr(SPRN_M_TWB, virt_to_phys(tmp_sw_page));
+	get_from_flat_dt("cpu", "clock-frequency", &ppc_proc_freq);
+	get_from_flat_dt("soc", "reg", &immrbase);
+	get_from_flat_dt("cpm", "brg-frequency", &brgfreq);
+
+	/* early dpmem init */
+	m8xx_cpm_dpinit();
+}
+
Index: linux-2.6.18/arch/powerpc/sysdev/commproc.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/commproc.c
+++ linux-2.6.18/arch/powerpc/sysdev/commproc.c
@@ -41,7 +41,7 @@
 #include <asm/prom.h>
 #include <asm/fs_pd.h>
 
-static void m8xx_cpm_dpinit(void);
+void m8xx_cpm_dpinit(void);
 static	uint	host_buffer;	/* One page of host buffer */
 static	uint	host_end;	/* end + 1 */
 cpic8xx_t	*cpic_reg;
@@ -49,6 +49,8 @@ cpic8xx_t	*cpic_reg;
 static struct device_node *cpm_pic_node;
 static struct irq_host *cpm_pic_host;
 
+static int dp_initialized = 0;
+
 static void cpm_mask_irq(unsigned int irq)
 {
 	unsigned int cpm_vec = (unsigned int)irq_map[irq].hwirq;
@@ -305,6 +307,9 @@ static uint dpram_pbase;
 
 void m8xx_cpm_dpinit(void)
 {
+	if(dp_initialized)
+		return;
+
 	spin_lock_init(&cpm_dpmem_lock);
 
 	dpram_vbase = immr_map_size(im_cpm.cp_dpmem, CPM_DATAONLY_BASE + CPM_DATAONLY_SIZE);
@@ -324,6 +329,7 @@ void m8xx_cpm_dpinit(void)
 	 * But the following should be at least safe.
 	 */
 	rh_attach_region(&cpm_dpmem_info, (void *)CPM_DATAONLY_BASE, CPM_DATAONLY_SIZE);
+	dp_initialized = 1;
 }
 
 /*
Index: linux-2.6.18/arch/powerpc/platforms/8xx/mpc885ads_setup.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/8xx/mpc885ads_setup.c
+++ linux-2.6.18/arch/powerpc/platforms/8xx/mpc885ads_setup.c
@@ -145,11 +145,13 @@ void __init mpc885ads_board_setup(void)
 		return;
 	}
 #ifdef CONFIG_SERIAL_CPM_SMC1
+#ifndef CONFIG_KGDB_CPM_UART_SMC1
 	clrbits32(bcsr_io, BCSR1_RS232EN_1);
 	clrbits32(&cp->cp_simode, 0xe0000000 >> 17);	/* brg1 */
 	tmpval8 = in_8(&(cp->cp_smc[0].smc_smcm)) | (SMCM_RX | SMCM_TX);
 	out_8(&(cp->cp_smc[0].smc_smcm), tmpval8);
-	clrbits16(&cp->cp_smc[0].smc_smcmr, SMCMR_REN | SMCMR_TEN);	/* brg1 */
+	clrbits16(&cp->cp_smc[0].smc_smcmr, SMCMR_REN | SMCMR_TEN);
+#endif
 #else
 	setbits32(bcsr_io, BCSR1_RS232EN_1);
 	out_be16(&cp->cp_smc[0].smc_smcmr, 0);
@@ -157,12 +159,14 @@ void __init mpc885ads_board_setup(void)
 #endif
 
 #ifdef CONFIG_SERIAL_CPM_SMC2
+#ifndef CONFIG_KGDB_CPM_UART_SMC2
 	clrbits32(bcsr_io, BCSR1_RS232EN_2);
 	clrbits32(&cp->cp_simode, 0xe0000000 >> 1);
 	setbits32(&cp->cp_simode, 0x20000000 >> 1);	/* brg2 */
 	tmpval8 = in_8(&(cp->cp_smc[1].smc_smcm)) | (SMCM_RX | SMCM_TX);
 	out_8(&(cp->cp_smc[1].smc_smcm), tmpval8);
 	clrbits16(&cp->cp_smc[1].smc_smcmr, SMCMR_REN | SMCMR_TEN);
+#endif
 
 	init_smc2_uart_ioports(0);
 #else
Index: linux-2.6.18/mvl_patches/pro50-0183.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-0183.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(183);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

