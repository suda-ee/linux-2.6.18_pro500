#! /usr/bin/env bash
# Patch: -common_mips_bcm1480_hrt
# Date: Thu Jul 19 13:39:59 2007
# Source: MontaVista Software, Inc. 
# MR: 23078
# Type: Enhancement
# Disposition: needs submitting to LKML and Ingo
# Signed-off-by: Manish Lachwani <mlachwani@mvista.com>
# Description:
# 
# HRT support for BCM1480. Quite similar to the SB1250 HRT 
# support since both processors have identical framework
# 
#  arch/mips/sibyte/bcm1480/Makefile |    6 +++++-
#  arch/mips/sibyte/bcm1480/irq.c    |   15 +++++++++++++--
#  arch/mips/sibyte/bcm1480/setup.c  |    8 ++++++++
#  arch/mips/sibyte/bcm1480/smp.c    |   12 +++++++++++-
#  4 files changed, 37 insertions(+), 4 deletions(-)
# 
# 

PATCHNUM=85
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc. 
MR: 23078
Type: Enhancement
Disposition: needs submitting to LKML and Ingo
Signed-off-by: Manish Lachwani <mlachwani@mvista.com>
Description:

HRT support for BCM1480. Quite similar to the SB1250 HRT 
support since both processors have identical framework

 arch/mips/sibyte/bcm1480/Makefile |    6 +++++-
 arch/mips/sibyte/bcm1480/irq.c    |   15 +++++++++++++--
 arch/mips/sibyte/bcm1480/setup.c  |    8 ++++++++
 arch/mips/sibyte/bcm1480/smp.c    |   12 +++++++++++-
 mvl_patches/pro50-0085.c          |   16 ++++++++++++++++
 5 files changed, 53 insertions(+), 4 deletions(-)


Index: linux-2.6.18/arch/mips/sibyte/bcm1480/Makefile
===================================================================
--- linux-2.6.18.orig/arch/mips/sibyte/bcm1480/Makefile
+++ linux-2.6.18/arch/mips/sibyte/bcm1480/Makefile
@@ -1,4 +1,8 @@
-obj-y := setup.o irq.o time.o
+obj-y := setup.o irq.o
+
+ifndef CONFIG_HIGH_RES_TIMERS
+obj-y	+= time.o
+endif
 
 obj-$(CONFIG_SMP)			+= smp.o
 obj-$(CONFIG_KGDB_SIBYTE)		+= kgdb_bigsur.o
Index: linux-2.6.18/arch/mips/sibyte/bcm1480/irq.c
===================================================================
--- linux-2.6.18.orig/arch/mips/sibyte/bcm1480/irq.c
+++ linux-2.6.18/arch/mips/sibyte/bcm1480/irq.c
@@ -351,8 +351,15 @@ void __init arch_init_irq(void)
 
 	unsigned int i, cpu;
 	u64 tmp;
-	unsigned int imask = STATUSF_IP4 | STATUSF_IP3 | STATUSF_IP2 |
+	unsigned int imask = STATUSF_IP3 | STATUSF_IP2 |
 		STATUSF_IP1 | STATUSF_IP0;
+
+#ifdef CONFIG_HIGH_RES_TIMERS
+	imask |= STATUSF_IP7;
+#else
+	imask |= STATUSF_IP4;
+#endif
+
 #ifdef CONFIG_KGDB
 	if (kgdb_early_setup)
 		return;
@@ -458,9 +465,13 @@ asmlinkage void plat_irq_dispatch(struct
 		sbprof_cpu_intr(exception_epc(regs));
 	else
 #endif
-
+#ifdef CONFIG_HIGH_RES_TIMERS
+	if (pending & CAUSEF_IP7)
+		 event_timer_handler(regs);
+#else
 	if (pending & CAUSEF_IP4)
 		bcm1480_timer_interrupt(regs);
+#endif
 
 #ifdef CONFIG_SMP
 	else if (pending & CAUSEF_IP3)
Index: linux-2.6.18/arch/mips/sibyte/bcm1480/setup.c
===================================================================
--- linux-2.6.18.orig/arch/mips/sibyte/bcm1480/setup.c
+++ linux-2.6.18/arch/mips/sibyte/bcm1480/setup.c
@@ -34,6 +34,10 @@ unsigned int soc_type;
 unsigned int periph_rev;
 unsigned int zbbus_mhz;
 
+#ifdef CONFIG_HIGH_RES_TIMERS
+extern unsigned int mips_hpt_frequency;
+#endif
+
 static unsigned int part_type;
 
 static char *soc_str;
@@ -129,6 +133,10 @@ void bcm1480_setup(void)
 	plldiv = G_BCM1480_SYS_PLL_DIV(__raw_readq(IOADDR(A_SCD_SYSTEM_CFG)));
 	zbbus_mhz = ((plldiv >> 1) * 50) + ((plldiv & 1) * 25);
 
+#ifdef CONFIG_HIGH_RES_TIMERS
+	mips_hpt_frequency = zbbus_mhz * 2 * 1000000;
+#endif
+
 	prom_printf("Broadcom SiByte %s %s @ %d MHz (SB-1A rev %d)\n",
 		    soc_str, pass_str, zbbus_mhz * 2, sb1_pass);
 	prom_printf("Board type: %s\n", get_system_type());
Index: linux-2.6.18/arch/mips/sibyte/bcm1480/smp.c
===================================================================
--- linux-2.6.18.orig/arch/mips/sibyte/bcm1480/smp.c
+++ linux-2.6.18/arch/mips/sibyte/bcm1480/smp.c
@@ -60,17 +60,27 @@ static void *mailbox_0_regs[] = {
  */
 void bcm1480_smp_init(void)
 {
-	unsigned int imask = STATUSF_IP4 | STATUSF_IP3 | STATUSF_IP2 |
+	unsigned int imask = STATUSF_IP3 | STATUSF_IP2 |
 		STATUSF_IP1 | STATUSF_IP0;
 
+#ifdef CONFIG_HIGH_RES_TIMERS
+	imask |= STATUSF_IP7;
+#else
+	imask |= STATUSF_IP4;
+#endif
+
 	/* Set interrupt mask, but don't enable */
 	change_c0_status(ST0_IM, imask);
 }
 
 void bcm1480_smp_finish(void)
 {
+#ifdef CONFIG_HIGH_RES_TIMERS
+	setup_hrtimer();
+#else
 	extern void bcm1480_time_init(void);
 	bcm1480_time_init();
+#endif
 	local_irq_enable();
 }
 
Index: linux-2.6.18/mvl_patches/pro50-0085.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-0085.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(85);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

