#! /usr/bin/env bash
# Patch: -pro_powerpc_8xx_EP88xC_mvl_integration
# Date: Thu Jun 26 14:13:28 2008
# Source: MontaVista Software, Inc.
# MR: 27582
# Type: Integration
# Disposition: backport from 11c146cc19df337f4af42dade9e4fca33c5a54ee commit has been changed
# Signed-off-by: Gennadiy Kurtsman <gkurtsman@ru.mvista.com>
# Description:
#        EP88XC plarform integration from 2.6.24-rc1 to MVL PRO-5.0
#        Code of the later version of Linux has been changed with aim to conform
#          with a components of PRO-5.0:
#           - CONFIG_PPC_CPM_NEW_BINDING parameter has been removed from PRO-5.0 as it isn't used here;
#           - some GPIO pins programming has been changed to conform with specification;
#           - some clock generators control has been reworked as it's required by PRO-5.0 discipline;
#           - platform code control has been reworked as it's required by PRO-5.0 discipline.
# 

PATCHNUM=1253
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 27582
Type: Integration
Disposition: backport from 11c146cc19df337f4af42dade9e4fca33c5a54ee commit has been changed
Signed-off-by: Gennadiy Kurtsman <gkurtsman@ru.mvista.com>
Description:
       EP88XC plarform integration from 2.6.24-rc1 to MVL PRO-5.0
       Code of the later version of Linux has been changed with aim to conform
         with a components of PRO-5.0:
          - CONFIG_PPC_CPM_NEW_BINDING parameter has been removed from PRO-5.0 as it isn't used here;
          - some GPIO pins programming has been changed to conform with specification;
          - some clock generators control has been reworked as it's required by PRO-5.0 discipline;
          - platform code control has been reworked as it's required by PRO-5.0 discipline.

Index: linux-2.6.18/arch/powerpc/platforms/8xx/Kconfig
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/8xx/Kconfig
+++ linux-2.6.18/arch/powerpc/platforms/8xx/Kconfig
@@ -35,7 +35,6 @@ config MPC885ADS
 config PPC_EP88XC
 	bool "Embedded Planet EP88xC (a.k.a. CWH-PPC-885XN-VE)"
 	select CPM1
-	select PPC_CPM_NEW_BINDING
 	help
 	  This enables support for the Embedded Planet EP88xC board.
 
Index: linux-2.6.18/arch/powerpc/platforms/8xx/ep88xc.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/8xx/ep88xc.c
+++ linux-2.6.18/arch/powerpc/platforms/8xx/ep88xc.c
@@ -1,4 +1,5 @@
-/*
+/*arch/ppc/platforms/ep88xc.c
+ *
  * Platform setup for the Embedded Planet EP88xC board
  *
  * Author: Scott Wood <scottwood@freescale.com>
@@ -10,14 +11,51 @@
  */
 
 #include <linux/init.h>
-#include <linux/of_platform.h>
+#include <linux/module.h>
+#include <linux/param.h>
+#include <linux/string.h>
+#include <linux/ioport.h>
+#include <linux/device.h>
+#include <linux/delay.h>
+#include <linux/root_dev.h>
+
+#include <linux/fs_enet_pd.h>
+#include <linux/fs_uart_pd.h>
+#include <linux/platform_device.h>
+#include <linux/fsl_devices.h>
+#include <linux/mii.h>
 
-#include <asm/machdep.h>
+#include <asm/delay.h>
 #include <asm/io.h>
+#include <asm/machdep.h>
+#include <asm/page.h>
+#include <asm/processor.h>
+#include <asm/system.h>
+#include <asm/time.h>
+#include <asm/ppcboot.h>
 #include <asm/udbg.h>
+#include <asm/mpc8xx.h>
+#include <asm/8xx_immap.h>
 #include <asm/commproc.h>
+#include <asm/fs_pd.h>
+#include <asm/prom.h>
 
-#include <sysdev/commproc.h>
+extern void mpc8xx_show_cpuinfo(struct seq_file *);
+extern void mpc8xx_restart(char *cmd);
+extern void mpc8xx_calibrate_decr(void);
+extern int mpc8xx_set_rtc_time(struct rtc_time *tm);
+extern void mpc8xx_get_rtc_time(struct rtc_time *tm);
+extern void m8xx_pic_init(void);
+extern unsigned int mpc8xx_get_irq(struct pt_regs *);
+extern void mpc8xx_map_io(void);
+
+void init_fec_ioports(struct fs_platform_info *fpi) {}
+void init_scc_ioports(struct fs_platform_info *fpi) {}
+
+int platform_device_skip(char *model, int id)
+{
+	return 0;
+}
 
 struct cpm_pin {
 	int port, pin, flags;
@@ -75,15 +113,15 @@ static struct cpm_pin ep88xc_pins[] = {
 	{0, 15, CPM_PIN_INPUT}, /* USBRXD */
 	{2, 6, CPM_PIN_OUTPUT}, /* USBTXN */
 	{2, 7, CPM_PIN_OUTPUT}, /* USBTXP */
-	{2, 10, CPM_PIN_INPUT}, /* USBRXN */
-	{2, 11, CPM_PIN_INPUT}, /* USBRXP */
+	{2, 10, CPM_PIN_INPUT | CPM_PIN_GPIO | CPM_PIN_SECONDARY}, /* USBRXN */
+	{2, 11, CPM_PIN_INPUT | CPM_PIN_GPIO | CPM_PIN_SECONDARY}, /* USBRXP */
 
-	/* Misc */
-	{1, 26, CPM_PIN_INPUT}, /* BRGO2 */
-	{1, 27, CPM_PIN_INPUT}, /* BRGO1 */
+	/* I2C */
+	{1, 26, CPM_PIN_OUTPUT | CPM_PIN_OPENDRAIN},
+	{1, 27, CPM_PIN_OUTPUT | CPM_PIN_OPENDRAIN},
 };
 
-static void __init init_ioports(void)
+void __init init_ioports(void)
 {
 	int i;
 
@@ -92,14 +130,18 @@ static void __init init_ioports(void)
 		cpm1_set_pin(pin->port, pin->pin, pin->flags);
 	}
 
+#ifndef CONFIG_KGDB_CPM_UART_SMC1
 	cpm1_clk_setup(CPM_CLK_SMC1, CPM_BRG1, CPM_CLK_RTX);
+#endif
 	cpm1_clk_setup(CPM_CLK_SCC1, CPM_CLK2, CPM_CLK_TX); /* USB */
 	cpm1_clk_setup(CPM_CLK_SCC1, CPM_CLK2, CPM_CLK_RX);
+#ifndef CONFIG_KGDB_CPM_UART_SCC2
 	cpm1_clk_setup(CPM_CLK_SCC2, CPM_BRG2, CPM_CLK_TX);
 	cpm1_clk_setup(CPM_CLK_SCC2, CPM_BRG2, CPM_CLK_RX);
+#endif
 }
 
-static u8 __iomem *ep88xc_bcsr;
+#define BCSR2_FLASH_UNPROTECT 0x08
 
 #define BCSR7_SCC2_ENABLE 0x10
 
@@ -116,9 +158,24 @@ static u8 __iomem *ep88xc_bcsr;
 static void __init ep88xc_setup_arch(void)
 {
 	struct device_node *np;
+	u8 __iomem *ep88xc_bcsr;
+
+	np = of_find_node_by_type(NULL, "cpu");
+	if (np != 0) {
+		const unsigned int *fp;
+
+		fp = get_property(np, "clock-frequency", NULL);
+		if (fp != 0)
+			loops_per_jiffy = *fp / HZ;
+		else
+			loops_per_jiffy = 50000000 / HZ;
+		of_node_put(np);
+	}
 
+#if !defined(CONFIG_KGDB_CPM_UART_SMC1) && !defined(CONFIG_KGDB_CPM_UART_SCC2)
 	cpm_reset();
 	init_ioports();
+#endif
 
 	np = of_find_compatible_node(NULL, NULL, "fsl,ep88xc-bcsr");
 	if (!np) {
@@ -134,43 +191,41 @@ static void __init ep88xc_setup_arch(voi
 		return;
 	}
 
+	setbits8(&ep88xc_bcsr[2], BCSR2_FLASH_UNPROTECT);
+
 	setbits8(&ep88xc_bcsr[7], BCSR7_SCC2_ENABLE);
 	setbits8(&ep88xc_bcsr[8], BCSR8_PHY1_ENABLE | BCSR8_PHY1_POWER |
 	                          BCSR8_PHY2_ENABLE | BCSR8_PHY2_POWER);
+	clrsetbits_8(&ep88xc_bcsr[9], 0xFF, BCSR9_USB_ENABLE |
+				      BCSR9_USB_FULL_SPEED_TARGET);
+	printk(KERN_INFO "Board revision: %02x\n", in_8(&ep88xc_bcsr[16]));
+	ROOT_DEV = Root_NFS;
 }
 
 static int __init ep88xc_probe(void)
 {
-	unsigned long root = of_get_flat_dt_root();
-	return of_flat_dt_is_compatible(root, "fsl,ep88xc");
-}
-
-static struct of_device_id __initdata of_bus_ids[] = {
-	{ .name = "soc", },
-	{ .name = "cpm", },
-	{ .name = "localbus", },
-	{},
-};
+	char *model = of_get_flat_dt_prop(of_get_flat_dt_root(),
+					  "model", NULL);
+	if (model == NULL)
+		return 0;
+	if (strcmp(model, "EP88XC"))
+		return 0;
 
-static int __init declare_of_platform_devices(void)
-{
-	/* Publish the QE devices */
-	if (machine_is(ep88xc))
-		of_platform_bus_probe(NULL, of_bus_ids, NULL);
-
-	return 0;
+	return 1;
 }
-device_initcall(declare_of_platform_devices);
 
-define_machine(ep88xc) {
-	.name = "Embedded Planet EP88xC",
-	.probe = ep88xc_probe,
-	.setup_arch = ep88xc_setup_arch,
-	.init_IRQ = m8xx_pic_init,
-	.get_irq	= mpc8xx_get_irq,
-	.restart = mpc8xx_restart,
-	.calibrate_decr = mpc8xx_calibrate_decr,
-	.set_rtc_time = mpc8xx_set_rtc_time,
-	.get_rtc_time = mpc8xx_get_rtc_time,
-	.progress = udbg_progress,
+define_machine(ep88xc)
+{
+	.name			= "EP88XC",
+	.probe			= ep88xc_probe,
+	.setup_arch		= ep88xc_setup_arch,
+	.init_IRQ		= m8xx_pic_init,
+	.show_cpuinfo		= mpc8xx_show_cpuinfo,
+	.get_irq		= mpc8xx_get_irq,
+	.restart		= mpc8xx_restart,
+	.calibrate_decr		= mpc8xx_calibrate_decr,
+	.set_rtc_time		= mpc8xx_set_rtc_time,
+	.get_rtc_time		= mpc8xx_get_rtc_time,
+	.setup_io_mappings	= mpc8xx_map_io,
+	.progress		= udbg_progress,
 };
Index: linux-2.6.18/arch/powerpc/platforms/8xx/ep88xc.h
===================================================================
--- /dev/null
+++ linux-2.6.18/arch/powerpc/platforms/8xx/ep88xc.h
@@ -0,0 +1,28 @@
+/*
+ * A collection of structures, addresses, and values associated with
+ * the Embedded Planet ep88xc board.
+ * Copied from the FADS stuff.
+ *
+ * Author: MontaVista Software, Inc.
+ *         source@mvista.com
+ *
+ * 2005 (c) MontaVista Software, Inc.  This file is licensed under the
+ * terms of the GNU General Public License version 2.  This program is licensed
+ * "as is" without any warranty of any kind, whether express or implied.
+ */
+
+#ifdef __KERNEL__
+#ifndef __ASM_EP88XC_H__
+#define __ASM_EP88XC_H__
+
+#include <asm/ppcboot.h>
+#include <sysdev/fsl_soc.h>
+
+#define IMAP_ADDR		(get_immrbase())
+#define IMAP_SIZE		((uint)(64 * 1024))
+
+extern void cpm_reset(void);
+extern void __init init_ioports(void);
+
+#endif /* __ASM_EP88XC_H__ */
+#endif /* __KERNEL__ */
Index: linux-2.6.18/drivers/serial/cpm_uart/cpm_uart_cpm1.c
===================================================================
--- linux-2.6.18.orig/drivers/serial/cpm_uart/cpm_uart_cpm1.c
+++ linux-2.6.18/drivers/serial/cpm_uart/cpm_uart_cpm1.c
@@ -50,6 +50,10 @@
 #include <platforms/8xx/mpc885ads.h>
 #endif
 
+#ifdef CONFIG_PPC_EP88XC
+#include <platforms/8xx/ep88xc.h>
+#endif
+
 #ifdef CONFIG_MPC86XADS
 #include <platforms/8xx/mpc86xads.h>
 #endif
Index: linux-2.6.18/include/asm-powerpc/mpc8xx.h
===================================================================
--- linux-2.6.18.orig/include/asm-powerpc/mpc8xx.h
+++ linux-2.6.18/include/asm-powerpc/mpc8xx.h
@@ -23,6 +23,10 @@
 #include <platforms/8xx/mpc885ads.h>
 #endif
 
+#if defined(CONFIG_PPC_EP88XC)
+#include <platforms/8xx/ep88xc.h>
+#endif
+
 #ifdef CONFIG_PCMCIA_M8XX
 extern struct mpc8xx_pcmcia_ops m8xx_pcmcia_ops;
 #endif
Index: linux-2.6.18/mvl_patches/pro50-1253.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1253.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1253);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

