#! /usr/bin/env bash
# Patch: -pro_powerpc_4xx_usb_dwc_otg_debug_fix
# Date: Fri Aug 15 13:07:15 2008
# Source: MontaVista Software, Inc.
# MR: 27840
# Type: Defect Fix
# Disposition: local
# Signed-off-by: Valentine Barshak <vbarshak@ru.mvista.com>
# Description:
#     This patch fixes some typos and div64 errors to make
#     usb dwc otg driver compile with DEBUG enabled.
# 

PATCHNUM=1477
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 27840
Type: Defect Fix
Disposition: local
Signed-off-by: Valentine Barshak <vbarshak@ru.mvista.com>
Description:
    This patch fixes some typos and div64 errors to make
    usb dwc otg driver compile with DEBUG enabled.

Index: linux-2.6.18/drivers/usb/gadget/dwc_otg/dwc_otg_cil.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/gadget/dwc_otg/dwc_otg_cil.c
+++ linux-2.6.18/drivers/usb/gadget/dwc_otg/dwc_otg_cil.c
@@ -189,7 +189,7 @@ dwc_otg_core_if_t *dwc_otg_cil_init(cons
 	DWC_DEBUGPL(DBG_CILV, "dev_token_q_depth=0x%0x\n",
 			core_if->hwcfg2.b.dev_token_q_depth);
 	DWC_DEBUGPL(DBG_CILV, "Total FIFO SZ=%d\n",
-	s		core_if->hwcfg3.b.dfifo_depth);
+			core_if->hwcfg3.b.dfifo_depth);
 	DWC_DEBUGPL(DBG_CILV, "xfer_size_cntr_width=%0x\n",
 			core_if->hwcfg3.b.xfer_size_cntr_width);
 
@@ -2711,7 +2711,7 @@ void dwc_otg_read_packet(dwc_otg_core_if
 	 * requires reading data from the FIFO into a uint32_t temp buffer,
 	 * then moving it into the data buffer.
 	 */
-	DWC_DEBUGPL((DBG_PCDV | DBG_CILV | DBG_SP), "%s(%p,%p,%d)\n", __func__,
+	DWC_DEBUGPL((DBG_PCDV | DBG_CILV), "%s(%p,%p,%d)\n", __func__,
 			_core_if, _dest, _bytes);
 
 	for (i = 0; i < word_count; i++, data_buff++)
Index: linux-2.6.18/drivers/usb/gadget/dwc_otg/dwc_otg_hcd.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/gadget/dwc_otg/dwc_otg_hcd.c
+++ linux-2.6.18/drivers/usb/gadget/dwc_otg/dwc_otg_hcd.c
@@ -45,6 +45,7 @@
 #include <linux/interrupt.h>
 #include <linux/string.h>
 #include <linux/dma-mapping.h>
+#include <linux/calc64.h>
 
 #include "dwc_otg_driver.h"
 #include "dwc_otg_hcd.h"
@@ -2496,6 +2497,23 @@ void dwc_print_setup_data(uint8_t *setup
 		DWC_PRINT("  wLength = 0x%0x\n\n", *((uint16_t *) &setup[6]));
 	}
 }
+
+
+/**
+ * 64-bit division for average number calculation
+ * used for debug statistics.
+ */
+static u64 dwc_otg_avg(u64 accum, u32 samples)
+{
+	u64 res;
+
+	if (!samples) 
+		return 0;
+
+	res = accum;
+	do_div(res, samples);
+	return res;
+}
 #endif	/* DEBUG */
 
 
@@ -2507,64 +2525,58 @@ void dwc_otg_hcd_dump_frrem(dwc_otg_hcd_
 	DWC_PRINT("Frame remaining at SOF:\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		_hcd->frrem_samples, _hcd->frrem_accum,
-		(_hcd->frrem_samples > 0) ?
-		_hcd->frrem_accum/_hcd->frrem_samples : 0);
+		dwc_otg_avg(_hcd->frrem_accum, _hcd->frrem_samples));
 
 	DWC_PRINT("\n");
 	DWC_PRINT("Frame remaining at start_transfer (uframe 7):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		core_if->hfnum_7_samples, core_if->hfnum_7_frrem_accum,
-		(core_if->hfnum_7_samples > 0) ?
-		core_if->hfnum_7_frrem_accum / core_if->hfnum_7_samples : 0);
+		dwc_otg_avg(core_if->hfnum_7_frrem_accum,
+				core_if->hfnum_7_samples));
 	DWC_PRINT("Frame remaining at start_transfer (uframe 0):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		core_if->hfnum_0_samples, core_if->hfnum_0_frrem_accum,
-		(core_if->hfnum_0_samples > 0) ?
-		core_if->hfnum_0_frrem_accum / core_if->hfnum_0_samples : 0);
+		dwc_otg_avg(core_if->hfnum_0_frrem_accum,
+			core_if->hfnum_0_samples));
 	DWC_PRINT("Frame remaining at start_transfer (uframe 1-6):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		core_if->hfnum_other_samples, core_if->hfnum_other_frrem_accum,
-		(core_if->hfnum_other_samples > 0) ?
-		core_if->hfnum_other_frrem_accum /
-			core_if->hfnum_other_samples : 0);
+		dwc_otg_avg(core_if->hfnum_other_frrem_accum,
+				core_if->hfnum_other_samples));
 
 	DWC_PRINT("\n");
 	DWC_PRINT("Frame remaining at sample point A (uframe 7):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		_hcd->hfnum_7_samples_a, _hcd->hfnum_7_frrem_accum_a,
-		(_hcd->hfnum_7_samples_a > 0) ?
-		_hcd->hfnum_7_frrem_accum_a / _hcd->hfnum_7_samples_a : 0);
+		dwc_otg_avg(_hcd->hfnum_7_frrem_accum_a,
+				_hcd->hfnum_7_samples_a));
 	DWC_PRINT("Frame remaining at sample point A (uframe 0):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		_hcd->hfnum_0_samples_a, _hcd->hfnum_0_frrem_accum_a,
-		(_hcd->hfnum_0_samples_a > 0) ?
-		_hcd->hfnum_0_frrem_accum_a / _hcd->hfnum_0_samples_a : 0);
+		dwc_otg_avg(_hcd->hfnum_0_frrem_accum_a,
+				_hcd->hfnum_0_samples_a));
 	DWC_PRINT("Frame remaining at sample point A (uframe 1-6):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		_hcd->hfnum_other_samples_a, _hcd->hfnum_other_frrem_accum_a,
-		(_hcd->hfnum_other_samples_a > 0) ?
-		_hcd->hfnum_other_frrem_accum_a /
-			_hcd->hfnum_other_samples_a : 0);
+		dwc_otg_avg(_hcd->hfnum_other_frrem_accum_a,
+				_hcd->hfnum_other_samples_a));
 
 	DWC_PRINT("\n");
 	DWC_PRINT("Frame remaining at sample point B (uframe 7):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		_hcd->hfnum_7_samples_b, _hcd->hfnum_7_frrem_accum_b,
-		(_hcd->hfnum_7_samples_b > 0) ?
-		_hcd->hfnum_7_frrem_accum_b /
-			_hcd->hfnum_7_samples_b : 0);
+		dwc_otg_avg(_hcd->hfnum_7_frrem_accum_b,
+				_hcd->hfnum_7_samples_b));
 	DWC_PRINT("Frame remaining at sample point B (uframe 0):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		_hcd->hfnum_0_samples_b, _hcd->hfnum_0_frrem_accum_b,
-		(_hcd->hfnum_0_samples_b > 0) ?
-		_hcd->hfnum_0_frrem_accum_b /
-			_hcd->hfnum_0_samples_b : 0);
+		dwc_otg_avg(_hcd->hfnum_0_frrem_accum_b,
+				_hcd->hfnum_0_samples_b));
 	DWC_PRINT("Frame remaining at sample point B (uframe 1-6):\n");
 	DWC_PRINT("  samples %u, accum %llu, avg %llu\n",
 		_hcd->hfnum_other_samples_b, _hcd->hfnum_other_frrem_accum_b,
-		(_hcd->hfnum_other_samples_b > 0) ?
-		_hcd->hfnum_other_frrem_accum_b /
-			_hcd->hfnum_other_samples_b : 0);
+		dwc_otg_avg(_hcd->hfnum_other_frrem_accum_b,
+				_hcd->hfnum_other_samples_b));
 #endif /* DEBUG */
 }
 
Index: linux-2.6.18/drivers/usb/gadget/dwc_otg/dwc_otg_plat.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/gadget/dwc_otg/dwc_otg_plat.h
+++ linux-2.6.18/drivers/usb/gadget/dwc_otg/dwc_otg_plat.h
@@ -118,7 +118,7 @@ static inline uint32_t SET_DEBUG_LEVEL(c
 # define DWC_DEBUGPL(lvl, x...)				\
 	do {						\
 		if ((lvl)&g_dbg_lvl)			\
-			printk(KERN_DBG USB_DWC x);	\
+			printk(KERN_DEBUG USB_DWC x);	\
 	} while (0)
 
 # define DWC_DEBUGP(x...)	DWC_DEBUGPL(DBG_ANY, x)
Index: linux-2.6.18/mvl_patches/pro50-1477.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1477.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1477);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

