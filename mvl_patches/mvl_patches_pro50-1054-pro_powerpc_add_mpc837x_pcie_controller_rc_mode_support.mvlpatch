#! /usr/bin/env bash
# Patch: -pro_powerpc_add_mpc837x_pcie_controller_rc_mode_support
# Date: Fri Apr 25 11:53:53 2008
# Source: http://ozlabs.org/pipermail/linuxppc-dev/2008-January/049028.html
# MR: 27333
# Type: Enhancement
# Disposition: backport from http://ozlabs.org/pipermail/linuxppc-dev/2008-January/049028.html
# Signed-off-by: Anton Vorontsov <avorontsov@ru.mvista.com>
# Description:
# [PRO] powerpc: Add MPC837x PCIE controller RC mode support
# 
# * The MPC837x PCIE controller hardware resources and SerDes are initiated in u-boot.
# * Merge the MPC837x PCIE code into arch/powerpc/sysdev/fsl_pci.c
# * The MPC837x PCIE controller`s configure address bit field is uniqe:
#         bus number:             bits 31-24
#         device number:          bits 23-19
#         function number:        bits 18-16
#         ext reg number:         bits 11-8
#         reg number:             bits 7-2
# * Add mpc837x_exclude_device to fixup a controller bug.
# * Add flag variant to mpc83xx_add_bridge function.
# 
# Signed-off-by: Tony Li <tony.li@freescale.com>
# 
#  arch/powerpc/boot/dts/mpc8377_rdb.dts     |   46 ++++++++
#  arch/powerpc/platforms/83xx/Kconfig       |    1 
#  arch/powerpc/platforms/83xx/mpc837x_rdb.c |   24 ++++
#  arch/powerpc/platforms/83xx/mpc83xx.h     |    4 +
#  arch/powerpc/platforms/83xx/pci.c         |   16 +++
#  arch/powerpc/sysdev/fsl_pci.c             |  159 +++++++++++++++++++++++++++++
#  arch/powerpc/sysdev/fsl_pci.h             |    3 +
#  include/asm-powerpc/pci-bridge.h          |    1 
#  include/linux/pci_ids.h                   |    4 +
#  9 files changed, 257 insertions(+), 1 deletions(-)
# 

PATCHNUM=1054
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: http://ozlabs.org/pipermail/linuxppc-dev/2008-January/049028.html
MR: 27333
Type: Enhancement
Disposition: backport from http://ozlabs.org/pipermail/linuxppc-dev/2008-January/049028.html
Signed-off-by: Anton Vorontsov <avorontsov@ru.mvista.com>
Description:
[PRO] powerpc: Add MPC837x PCIE controller RC mode support

* The MPC837x PCIE controller hardware resources and SerDes are initiated in u-boot.
* Merge the MPC837x PCIE code into arch/powerpc/sysdev/fsl_pci.c
* The MPC837x PCIE controller`s configure address bit field is uniqe:
        bus number:             bits 31-24
        device number:          bits 23-19
        function number:        bits 18-16
        ext reg number:         bits 11-8
        reg number:             bits 7-2
* Add mpc837x_exclude_device to fixup a controller bug.
* Add flag variant to mpc83xx_add_bridge function.

Signed-off-by: Tony Li <tony.li@freescale.com>

 arch/powerpc/boot/dts/mpc8377_rdb.dts     |   46 ++++++++
 arch/powerpc/platforms/83xx/Kconfig       |    1 
 arch/powerpc/platforms/83xx/mpc837x_rdb.c |   24 ++++
 arch/powerpc/platforms/83xx/mpc83xx.h     |    4 
 arch/powerpc/platforms/83xx/pci.c         |   16 +++
 arch/powerpc/sysdev/fsl_pci.c             |  159 ++++++++++++++++++++++++++++++
 arch/powerpc/sysdev/fsl_pci.h             |    3 
 include/asm-powerpc/pci-bridge.h          |    1 
 include/linux/pci_ids.h                   |    4 
 mvl_patches/pro50-1054.c                  |   16 +++
 10 files changed, 273 insertions(+), 1 deletion(-)

Index: linux-2.6.18/arch/powerpc/boot/dts/mpc8377_rdb.dts
===================================================================
--- linux-2.6.18.orig/arch/powerpc/boot/dts/mpc8377_rdb.dts
+++ linux-2.6.18/arch/powerpc/boot/dts/mpc8377_rdb.dts
@@ -292,4 +292,50 @@
 		compatible = "fsl,mpc8349-pci";
 		device_type = "pci";
 	};
+
+	pcie@e0009000 {
+		interrupt-map-mask = <0xf800 0 0 7>;
+		interrupt-map = <
+			0000 0 0 1 &ipic 1 8
+			0000 0 0 2 &ipic 1 8
+			0000 0 0 3 &ipic 1 8
+			0000 0 0 4 &ipic 1 8
+		>;
+		interrupt-parent = < &ipic >;
+		interrupts = <1 8>;
+		bus-range = <0 0>;
+		ranges = <0x02000000 0 0xA0000000 0xA0000000 0 0x10000000
+		          0x01000000 0 0x00000000 0xB1000000 0 0x00800000>;
+		clock-frequency = <0>;
+		#interrupt-cells = <1>;
+		#size-cells = <2>;
+		#address-cells = <3>;
+		reg = <0xe0009000 0x00001000
+		       0xb0000000 0x01000000>;
+		compatible = "fsl,mpc8377-pcie";
+		device_type = "pci";
+	};
+
+	pcie@e000a000 {
+		interrupt-map-mask = <0xf800 0 0 7>;
+		interrupt-map = <
+			0000 0 0 1 &ipic 2 8
+			0000 0 0 2 &ipic 2 8
+			0000 0 0 3 &ipic 2 8
+			0000 0 0 4 &ipic 2 8
+		>;
+		interrupt-parent = < &ipic >;
+		interrupts = <2 8>;
+		bus-range = <0 0>;
+		ranges = <0x02000000 0 0xC0000000 0xC0000000 0 0x10000000
+			  0x01000000 0 0x00000000 0xD1000000 0 0x00800000>;
+		clock-frequency = <0>;
+		#interrupt-cells = <1>;
+		#size-cells = <2>;
+		#address-cells = <3>;
+		reg = <0xe000a000 0x00001000
+		       0xd0000000 0x01000000>;
+		compatible = "fsl,mpc8377-pcie";
+		device_type = "pci";
+	};
 };
Index: linux-2.6.18/arch/powerpc/platforms/83xx/Kconfig
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/83xx/Kconfig
+++ linux-2.6.18/arch/powerpc/platforms/83xx/Kconfig
@@ -96,3 +96,4 @@ config PPC_MPC837x
 	bool
 	select PPC_UDBG_16550
 	select PPC_INDIRECT_PCI
+	select FSL_PCI if PCI
Index: linux-2.6.18/arch/powerpc/platforms/83xx/mpc837x_rdb.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/83xx/mpc837x_rdb.c
+++ linux-2.6.18/arch/powerpc/platforms/83xx/mpc837x_rdb.c
@@ -27,6 +27,25 @@ extern int mpc837x_usb_cfg(void);
  * Setup the architecture
  *
  */
+#ifdef CONFIG_PCI
+static int mpc837x_exclude_device(struct pci_controller *hose,
+					u_char bus, u_char devfn)
+{
+	struct pci_bus *pci_bus;
+
+	if (hose->indirect_type & PPC_INDIRECT_TYPE_MPC83XX_PCIE) {
+		pci_bus = pci_find_bus(hose->global_number, bus);
+		if ((bus == hose->first_busno) ||
+			(pci_bus->primary == hose->first_busno)) {
+			if (devfn & 0xf8)
+				return PCIBIOS_DEVICE_NOT_FOUND;
+		}
+	}
+
+	return PCIBIOS_SUCCESSFUL;
+}
+#endif
+
 static void __init mpc837x_rdb_setup_arch(void)
 {
 #ifdef CONFIG_PCI
@@ -39,6 +58,11 @@ static void __init mpc837x_rdb_setup_arc
 #ifdef CONFIG_PCI
 	for_each_compatible_node(np, "pci", "fsl,mpc8349-pci")
 		mpc83xx_add_bridge(np);
+
+	for_each_compatible_node(np, "pci", "fsl,mpc8377-pcie")
+		mpc83xx_add_bridge(np);
+
+	ppc_md.pci_exclude_device = mpc837x_exclude_device;
 #endif
 	mpc837x_usb_cfg();
 }
Index: linux-2.6.18/arch/powerpc/platforms/83xx/mpc83xx.h
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/83xx/mpc83xx.h
+++ linux-2.6.18/arch/powerpc/platforms/83xx/mpc83xx.h
@@ -50,7 +50,9 @@
  * Declaration for the various functions exported by the
  * mpc83xx_* files. Mostly for use by mpc83xx_setup
  */
-
+#define PPC_83XX_PCI_PRIMARY	0x1
+#define PPC_83XX_PCI		0x2
+#define PPC_83XX_PCIE		0x4
 extern int mpc83xx_add_bridge(struct device_node *dev);
 extern int mpc83xx_exclude_device(struct pci_controller *hose,
 				  u_char bus, u_char devfn);
Index: linux-2.6.18/arch/powerpc/platforms/83xx/pci.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/83xx/pci.c
+++ linux-2.6.18/arch/powerpc/platforms/83xx/pci.c
@@ -24,6 +24,9 @@
 #include <asm/pci-bridge.h>
 #include <asm/prom.h>
 #include <sysdev/fsl_soc.h>
+#include <sysdev/fsl_pci.h>
+
+#include "mpc83xx.h"
 
 #undef DEBUG
 
@@ -81,6 +84,19 @@ int __init mpc83xx_add_bridge(struct dev
 		setup_indirect_pci(hose, immr + 0x8380, immr + 0x8384, 0);
 		primary = 0;
 	}
+	/* PCIE */
+	if ((rsrc.start & 0xfffff) == 0x9000 ||
+			(rsrc.start & 0xfffff) == 0xa000) {
+		struct resource cfg_space;
+
+		if (of_address_to_resource(dev, 1, &cfg_space)) {
+			printk("PCIE RC losts configure space. Skip it\n");
+			return 1;
+		}
+		mpc83xx_setup_pcie(hose, &rsrc, &cfg_space);
+		if ((rsrc.start & 0xfffff) == 0xa000)
+			primary = 0;
+	}
 
 	printk(KERN_INFO "Found MPC83xx PCI host bridge at 0x%016llx. "
 	       "Firmware bus number: %d->%d\n",
Index: linux-2.6.18/arch/powerpc/sysdev/fsl_pci.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/fsl_pci.c
+++ linux-2.6.18/arch/powerpc/sysdev/fsl_pci.c
@@ -215,6 +215,165 @@ int __init fsl_add_bridge(struct device_
 	return 0;
 }
 
+/* MPC83xx PCIE routines*/
+/* PCIE Registers */
+#define PEX_LTSSM_STAT          0x404
+#define PEX_LTSSM_STAT_L0       0x16
+#define PEX_GCLK_RATIO          0x440
+
+/* With the convention of u-boot, the PCIE outbound window 0 serves
+ * as configuration transactions outbound */
+#define PEX_OUTWIN0_TAL		0xCA8
+#define PEX_OUTWIN0_TAH		0xCAC
+
+void remap_cfg_outbound(void * __iomem reg_base, u32 tal, u32 tah)
+{
+	out_le32(reg_base + PEX_OUTWIN0_TAL, tal);
+	out_le32(reg_base + PEX_OUTWIN0_TAH, tah);
+}
+
+static int mpc83xx_read_config_pcie(struct pci_bus *bus,
+			uint devfn, int offset, int len, u32 *val)
+{
+	struct pci_controller *hose = bus->sysdata;
+	void __iomem *cfg_addr;
+	static u32 orig_busno = 0;
+	u32 bus_no;
+
+	if (hose->indirect_type & PPC_INDIRECT_TYPE_NO_PCIE_LINK)
+		return PCIBIOS_DEVICE_NOT_FOUND;
+
+	if (ppc_md.pci_exclude_device)
+		if (ppc_md.pci_exclude_device(hose, bus->number, devfn))
+			return PCIBIOS_DEVICE_NOT_FOUND;
+
+	switch (len) {
+	case 2:
+		if (offset & 1)
+			return -EINVAL;
+		break;
+	case 4:
+	if (offset & 3)
+		return -EINVAL;
+		break;
+	}
+
+	if ((bus->number == hose->first_busno) &&
+		(hose->indirect_type & PPC_INDIRECT_TYPE_MPC83XX_PCIE))
+		cfg_addr = (void __iomem *)((ulong) hose->cfg_data + (offset & 0xfff));
+	else {
+		bus_no = bus->number - hose->first_busno;
+		if (bus_no != orig_busno) {
+			remap_cfg_outbound((void __iomem *)hose->cfg_data, bus_no, 0);
+			orig_busno = bus_no;
+		}
+		cfg_addr = (void __iomem *)((ulong) hose->cfg_addr +
+			((devfn << 16) | (offset & 0xfff)));
+	}
+
+	switch (len) {
+	case 1:
+		*val = in_8(cfg_addr);
+		break;
+	case 2:
+		*val = in_le16(cfg_addr);
+		break;
+	default:
+		*val = in_le32(cfg_addr);
+		break;
+	}
+
+	return PCIBIOS_SUCCESSFUL;
+}
+
+static int mpc83xx_write_config_pcie(struct pci_bus *bus,
+			uint devfn, int offset, int len, u32 val)
+{
+	struct pci_controller *hose = bus->sysdata;
+	void __iomem *cfg_addr;
+	static u32 orig_busno = 0;
+	u32 bus_no;
+
+	if (hose->indirect_type & PPC_INDIRECT_TYPE_NO_PCIE_LINK)
+		return PCIBIOS_DEVICE_NOT_FOUND;
+
+	if (ppc_md.pci_exclude_device)
+		if (ppc_md.pci_exclude_device(hose, bus->number, devfn))
+			return PCIBIOS_DEVICE_NOT_FOUND;
+
+	switch (len) {
+	case 2:
+		if (offset & 1)
+			return -EINVAL;
+		break;
+	case 4:
+		if (offset & 3)
+			return -EINVAL;
+		break;
+	}
+
+
+	if ((bus->number == hose->first_busno) &&
+		(hose->indirect_type & PPC_INDIRECT_TYPE_MPC83XX_PCIE))
+		cfg_addr = (void __iomem *)((ulong) hose->cfg_data + (offset & 0xfff));
+	else {
+		bus_no = bus->number - hose->first_busno;
+		if (bus_no != orig_busno) {
+			remap_cfg_outbound((void __iomem *)hose->cfg_data, bus_no, 0);
+			orig_busno = bus_no;
+		}
+		cfg_addr = (void __iomem *)((ulong) hose->cfg_addr +
+			((devfn << 16) | (offset & 0xfff)));
+	}
+
+	switch (len) {
+	case 1:
+		out_8(cfg_addr, val);
+		break;
+	case 2:
+		out_le16(cfg_addr, val);
+		break;
+	default:
+		out_le32(cfg_addr, val);
+		break;
+	}
+
+	return PCIBIOS_SUCCESSFUL;
+}
+
+static struct pci_ops mpc83xx_pcie_ops = {
+	mpc83xx_read_config_pcie,
+	mpc83xx_write_config_pcie
+};
+
+void __init mpc83xx_setup_pcie(struct pci_controller *hose,
+			struct resource *reg, struct resource *cfg_space)
+{
+	void __iomem *hose_cfg_header, *mbase;
+	u32 val;
+
+	hose_cfg_header = ioremap(reg->start, reg->end - reg->start + 1);
+
+	val = in_le32(hose_cfg_header + PEX_LTSSM_STAT);
+	if (val < PEX_LTSSM_STAT_L0)
+		hose->indirect_type |= PPC_INDIRECT_TYPE_NO_PCIE_LINK;
+	hose->indirect_type |= PPC_INDIRECT_TYPE_MPC83XX_PCIE;
+
+	mbase = ioremap(cfg_space->start & PAGE_MASK, cfg_space->end - cfg_space->start + 1);
+	hose->ops = &mpc83xx_pcie_ops;
+	hose->cfg_addr = mbase + (cfg_space->start & ~PAGE_MASK);
+
+	/* The MPC83xx PCIE implements direct access configure space
+	 * routines instead of indirect ones. So, the cfg_data field is free.
+	 * The MPC83xx PCIE RC configure header is memory-mapped,
+	 * we use cfg_data as this header pointer */
+	hose->cfg_data = hose_cfg_header;
+}
+
+DECLARE_PCI_FIXUP_HEADER(0x1957, PCI_DEVICE_ID_MPC8377E, quirk_fsl_pcie_header);
+DECLARE_PCI_FIXUP_HEADER(0x1957, PCI_DEVICE_ID_MPC8377, quirk_fsl_pcie_header);
+DECLARE_PCI_FIXUP_HEADER(0x1957, PCI_DEVICE_ID_MPC8378E, quirk_fsl_pcie_header);
+DECLARE_PCI_FIXUP_HEADER(0x1957, PCI_DEVICE_ID_MPC8378, quirk_fsl_pcie_header);
 DECLARE_PCI_FIXUP_HEADER(0x1957, PCI_DEVICE_ID_MPC8548E, quirk_fsl_pcie_header);
 DECLARE_PCI_FIXUP_HEADER(0x1957, PCI_DEVICE_ID_MPC8548, quirk_fsl_pcie_header);
 DECLARE_PCI_FIXUP_HEADER(0x1957, PCI_DEVICE_ID_MPC8543E, quirk_fsl_pcie_header);
Index: linux-2.6.18/arch/powerpc/sysdev/fsl_pci.h
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/fsl_pci.h
+++ linux-2.6.18/arch/powerpc/sysdev/fsl_pci.h
@@ -84,5 +84,8 @@ struct ccsr_pci {
 extern int fsl_add_bridge(struct device_node *dev, int is_primary);
 extern void fsl_pcibios_fixup_bus(struct pci_bus *bus);
 
+extern void mpc83xx_setup_pcie(struct pci_controller *hose,
+		struct resource *reg, struct resource *cfg_space);
+
 #endif /* __POWERPC_FSL_PCI_H */
 #endif /* __KERNEL__ */
Index: linux-2.6.18/include/asm-powerpc/pci-bridge.h
===================================================================
--- linux-2.6.18.orig/include/asm-powerpc/pci-bridge.h
+++ linux-2.6.18/include/asm-powerpc/pci-bridge.h
@@ -98,6 +98,7 @@ struct pci_controller {
 #define PPC_INDIRECT_TYPE_SURPRESS_PRIMARY_BUS	0x00000004
 #define PPC_INDIRECT_TYPE_NO_PCIE_LINK		0x00000008
 #define PPC_INDIRECT_TYPE_BIG_ENDIAN		0x00000010
+#define PPC_INDIRECT_TYPE_MPC83XX_PCIE		0x00000020
 	u32 indirect_type;
 #endif	/* !CONFIG_PPC64 */
 	/* Currently, we limit ourselves to 1 IO range and 3 mem
Index: linux-2.6.18/include/linux/pci_ids.h
===================================================================
--- linux-2.6.18.orig/include/linux/pci_ids.h
+++ linux-2.6.18/include/linux/pci_ids.h
@@ -2028,6 +2028,10 @@
 #define PCI_DEVICE_ID_TDI_EHCI          0x0101
 
 #define PCI_VENDOR_ID_FREESCALE		0x1957
+#define PCI_DEVICE_ID_MPC8378E		0x00c4
+#define PCI_DEVICE_ID_MPC8378		0x00c5
+#define PCI_DEVICE_ID_MPC8377E		0x00c6
+#define PCI_DEVICE_ID_MPC8377		0x00c7
 #define PCI_DEVICE_ID_MPC8548E		0x0012
 #define PCI_DEVICE_ID_MPC8548		0x0013
 #define PCI_DEVICE_ID_MPC8543E		0x0014
Index: linux-2.6.18/mvl_patches/pro50-1054.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1054.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1054);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

