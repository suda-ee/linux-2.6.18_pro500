#! /usr/bin/env bash
# Patch: -pro_powerpc_update_mpc8272ads_dts_localbus
# Date: Wed Jan  9 21:54:03 2008
# Source: MontaVista Software, Inc.
# MR: 25898
# Type: Defect Fix
# Disposition: merged from 2.6.24
# Signed-off-by: Wade Farnsworth <wfarnsworth@mvista.com>
# Description:
#     Update mpc8272ads.dts to use the new flash bindings.
# 
#     Note that the 8272ADS h/w rev that we support has a 8MB flash SIMM,
#     whereas the version supported by the upstream dts has a 32MB flash SIMM.
# 
#     Also bring the localbus (chipselect) node in line with the version that was
#     eventually accepted upstream.
# 
#     The upstream patch that adds this also contains changes that have already
#     been incorporated into Pro 5.0.  Therefore, only the changes to the
#     localbus node are being merged.
# 
#     The upstream patch ID is e00c5498a2a614931cbb7d88a53979d5d47594e1.
# 

PATCHNUM=717
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 25898
Type: Defect Fix
Disposition: merged from 2.6.24
Signed-off-by: Wade Farnsworth <wfarnsworth@mvista.com>
Description:
    Update mpc8272ads.dts to use the new flash bindings.

    Note that the 8272ADS h/w rev that we support has a 8MB flash SIMM,
    whereas the version supported by the upstream dts has a 32MB flash SIMM.

    Also bring the localbus (chipselect) node in line with the version that was
    eventually accepted upstream.

    The upstream patch that adds this also contains changes that have already
    been incorporated into Pro 5.0.  Therefore, only the changes to the
    localbus node are being merged.

    The upstream patch ID is e00c5498a2a614931cbb7d88a53979d5d47594e1.

Index: linux-2.6.18/arch/powerpc/boot/dts/mpc8272ads.dts
===================================================================
--- linux-2.6.18.orig/arch/powerpc/boot/dts/mpc8272ads.dts
+++ linux-2.6.18/arch/powerpc/boot/dts/mpc8272ads.dts
@@ -32,39 +32,55 @@
 		};
 	};
 
-	CS: chipselect {
-		compatible = "fsl,mpc8272ads-chipselect",
-		             "fsl,mpc8272-chipselect",
-		             "fsl,pq2-chipselect";
+	localbus@f0010100 {
+		compatible = "fsl,mpc8272-localbus",
+		             "fsl,pq2-localbus";
 		#address-cells = <2>;
 		#size-cells = <1>;
-		fsl,ctrl = <&CSCTRL>;
+		reg = <f0010100 40>;
 
 		ranges = <0 0 ff800000 00800000
 		          1 0 f4500000 00008000
 		          3 0 f8200000 00008000>;
 
-		flash@0 {
-			device_type = "rom";
-			compatible = "direct-mapped";
+		flash@0,0 {
+			compatible = "jedec-flash";
 			reg = <0 0 800000>;
-			probe-type = "JEDEC";
 			bank-width = <4>;
-			partitions = <00000000 00040001
-				      00040000 005c0000
-				      00600000 00100001
-				      00700000 00040001
-				      00740000 000c0001>;
-			partition-names = "HRCW", "User FS", "uImage",
-					  "bootloader", "bootloader env";
+			device-width = <1>;
+			#address-cells = <1>;
+			#size-cells = <1>;
+			hrcw@0 {
+				label = "HRCW";
+				reg = <0 40000>;
+				read-only;
+			};
+			user_fs@40000 {
+				label = "User FS";
+				reg = <40000 5c0000>;
+			};
+			uimage@600000 {
+				label = "uImage";
+				reg = <600000 100000>;
+			};
+			bootloader@700000 {
+				label = "bootloader";
+				reg = <700000 40000>;
+				read-only;
+			};
+			bootloader_env@740000 {
+				label = "bootloader env";
+				reg = <740000 c0000>;
+				read-only;
+			};
 		};
 
-		bcsr@1 {
+		bcsr@1,0 {
 			reg = <1 0 20>;
 			compatible = "fsl,mpc8272ads-bcsr";
 		};
 
-		PCI_PIC: interrupt-controller@f8200000 {
+		PCI_PIC: interrupt-controller@3,0 {
 			compatible = "fsl,mpc8272ads-pci-pic",
 			             "fsl,pq2ads-pci-pic";
 			#interrupt-cells = <1>;
@@ -125,13 +141,6 @@
 		reg = <f0000000 10000>;
 		bus-frequency = <0>;
 
-		CSCTRL: chipselect@10100 {
-			compatible = "fsl,mpc8272-chipset-ctrl",
-			             "fsl,pq2-chipselect-ctrl";
-			reg = <10100 40>;
-			fsl,bus = <&CS>;
-		};
-
 		cpm@119c0 {
 			#address-cells = <1>;
 			#size-cells = <1>;
Index: linux-2.6.18/arch/powerpc/platforms/82xx/mpc8272ads.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/82xx/mpc8272ads.c
+++ linux-2.6.18/arch/powerpc/platforms/82xx/mpc8272ads.c
@@ -173,6 +173,7 @@ static void __init mpc8272ads_setup_arch
 static struct of_device_id __initdata of_bus_ids[] = {
 	{ .name = "soc", },
 	{ .name = "cpm", },
+	{ .name = "localbus", },
 	{},
 };
 
Index: linux-2.6.18/mvl_patches/pro50-0717.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-0717.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(717);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

