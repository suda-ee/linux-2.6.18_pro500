#! /usr/bin/env bash
# Patch: -common_arm_freescale_mx27ads_usb_sync_fix
# Date: Tue Mar 11 17:37:14 2008
# Source:  local
# MR: 26885
# Type: Bugfix
# Disposition: local
# Signed-off-by:  Aleksey Makarov <amakarov@ru.mvista.com>
# Description:
#     Backporting  bsp-imx27ads-rel3 branch of 
#     opensource.freescale.com/pub/scm/linux-2.6-mx.git
# 

PATCHNUM=979
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source:  local
MR: 26885
Type: Bugfix
Disposition: local
Signed-off-by:  Aleksey Makarov <amakarov@ru.mvista.com>
Description:
    Backporting  bsp-imx27ads-rel3 branch of 
    opensource.freescale.com/pub/scm/linux-2.6-mx.git

Index: linux-2.6.18/arch/arm/mach-mx2/usb.c
===================================================================
--- linux-2.6.18.orig/arch/arm/mach-mx2/usb.c
+++ linux-2.6.18/arch/arm/mach-mx2/usb.c
@@ -258,7 +258,7 @@ static struct resource pindetect_resourc
 		.flags = IORESOURCE_MEM,
 	},
 	{
-		.start = INT_USB3,
+		.start = MXC_INT_USB3,
 		.flags = IORESOURCE_IRQ,
 	},
 };
Index: linux-2.6.18/arch/arm/plat-mxc/isp1504xc.c
===================================================================
--- linux-2.6.18.orig/arch/arm/plat-mxc/isp1504xc.c
+++ linux-2.6.18/arch/arm/plat-mxc/isp1504xc.c
@@ -18,6 +18,7 @@
 #include <linux/platform_device.h>
 #include <linux/delay.h>
 #include <linux/usb/fsl_xcvr.h>
+#include <linux/io.h>
 
 #include <asm/hardware.h>
 #include <asm/arch/arc_otg.h>
@@ -44,6 +45,7 @@
 #define DP_PULL_DOWN		(1 << 1)	/* enable DP Pull Down */
 #define ID_PULL_UP		(1 << 0)	/* enable ID Pull Up */
 
+#ifdef DEBUG
 /*!
  * read ULPI register 'reg' thru VIEWPORT register 'view'
  *
@@ -72,6 +74,7 @@ static u8 isp1504_read(int reg, u32 *vie
 
 	return (u8) (data >> ULPIVW_RDATA_SHIFT) & ULPIVW_RDATA_MASK;
 }
+#endif
 
 /*!
  * set bits into OTG ISP1504 register 'reg' thru VIEWPORT register 'view'
Index: linux-2.6.18/arch/arm/plat-mxc/usb_common.c
===================================================================
--- linux-2.6.18.orig/arch/arm/plat-mxc/usb_common.c
+++ linux-2.6.18/arch/arm/plat-mxc/usb_common.c
@@ -40,6 +40,8 @@
 #include <linux/fsl_devices.h>
 #include <linux/usb/otg.h>
 #include <linux/usb/fsl_xcvr.h>
+#include <linux/io.h>
+
 #include <asm/arch/arc_otg.h>
 
 #define MXC_NUMBER_USB_TRANSCEIVER 6
Index: linux-2.6.18/drivers/usb/core/hub.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/core/hub.c
+++ linux-2.6.18/drivers/usb/core/hub.c
@@ -1306,6 +1306,8 @@ static inline void show_string(struct us
 #include "otg_whitelist.h"
 #endif
 
+static int __usb_suspend_device(struct usb_device *, int port1);
+
 /**
  * usb_new_device - perform initial device setup (usbcore-internal)
  * @udev: newly addressed device (in ADDRESS state)
@@ -1407,8 +1409,6 @@ int usb_new_device(struct usb_device *ud
 		 * (Includes HNP test device.)
 		 */
 		if (udev->bus->b_hnp_enable || udev->bus->is_b_host) {
-			static int __usb_suspend_device(struct usb_device *,
-						int port1);
 			err = __usb_suspend_device(udev, udev->bus->otg_port);
 			if (err < 0)
 				dev_dbg(&udev->dev, "HNP fail, %d\n", err);
Index: linux-2.6.18/drivers/usb/gadget/arcotg_udc.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/gadget/arcotg_udc.c
+++ linux-2.6.18/drivers/usb/gadget/arcotg_udc.c
@@ -2190,7 +2190,7 @@ static void reset_irq(struct arcotg_udc 
 	}
 }
 
-static irqreturn_t arcotg_udc_irq(int irq, void *_udc)
+static irqreturn_t arcotg_udc_irq(int irq, void *_udc, struct pt_regs *regs)
 {
 	struct arcotg_udc *udc = _udc;
 	u32 irq_src;
@@ -3075,7 +3075,7 @@ static int fsl_udc_resume(struct device 
  */
 static struct platform_driver udc_driver = {
 	.probe = fsl_udc_probe,
-	.remove = __exit_p(fsl_udc_remove),
+	.remove = __devexit_p(fsl_udc_remove),
 	.driver = {
 		   .name = driver_name,
 		   },
Index: linux-2.6.18/drivers/usb/otg/fsl_otg.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/otg/fsl_otg.c
+++ linux-2.6.18/drivers/usb/otg/fsl_otg.c
@@ -20,7 +20,7 @@
 #include <linux/list.h>
 #include <linux/usb.h>
 #include <linux/platform_device.h>
-#include <linux/usb/ch9.h>
+#include <linux/usb_ch9.h>
 #include <linux/usb_gadget.h>
 #include <linux/time.h>
 #include <linux/io.h>
@@ -63,43 +63,6 @@ static struct fsl_otg_config fsl_otg_ini
 	.otg_port = 1,
 };
 
-/**
- * usb_bus_start_enum - start immediate enumeration (for OTG)
- * @bus: the bus (must use hcd framework)
- * @port: 1-based number of port; usually bus->otg_port
- * Context: in_interrupt()
- *
- * Starts enumeration, with an immediate reset followed later by
- * khubd identifying and possibly configuring the device.
- * This is needed by OTG controller drivers, where it helps meet
- * HNP protocol timing requirements for starting a port reset.
- */
-
-#include "../../../drivers/usb/core/hcd.h"
-
-int usb_bus_start_enum(struct usb_bus *bus, unsigned port_num)
-{
-	struct usb_hcd *hcd;
-	int status = -EOPNOTSUPP;
-
-	/* NOTE: since HNP can't start by grabbing the bus's address0_sem,
-	 * boards with root hubs hooked up to internal devices (instead of
-	 * just the OTG port) may need more attention to resetting...
-	 */
-
-	hcd = container_of(bus, struct usb_hcd, self);
-	if (port_num && hcd->driver->start_port_reset)
-		status = hcd->driver->start_port_reset(hcd, port_num);
-
-	/* run khubd shortly after (first) root port reset finishes;
-	 * it may issue others, until at least 50 msecs have passed.
-	 */
-	if (status == 0)
-		mod_timer(&hcd->rh_timer, jiffies + msecs_to_jiffies(10));
-
-	return status;
-}
-
 #if defined(CONFIG_ISP1504_MXC)
 int write_ulpi(u8 addr, u8 data)
 {
@@ -626,10 +589,9 @@ static int fsl_otg_set_power(struct otg_
  * roles, the pin-detect interrupts are delayed, and handled
  * by this routine.
  */
-static void fsl_otg_event(struct work_struct *work)
+static void fsl_otg_event(void *og)
 {
-	struct fsl_otg *og = container_of(work, struct fsl_otg, otg_event.work);
-	struct otg_fsm *fsm = &og->fsm;
+	struct otg_fsm *fsm = &((struct fsl_otg *)og)->fsm;
 
 	if (fsm->id) {		/* switch to gadget */
 		fsl_otg_start_host(fsm, 0);
@@ -643,7 +605,7 @@ static void fsl_otg_event(struct work_st
  * intact.  It needs to have knowledge of some USB interrupts
  * such as port change.
  */
-irqreturn_t fsl_otg_isr(int irq, void *dev_id)
+irqreturn_t fsl_otg_isr(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct otg_fsm *fsm = &((struct fsl_otg *)dev_id)->fsm;
 	struct otg_transceiver *otg = &((struct fsl_otg *)dev_id)->otg;
@@ -671,10 +633,10 @@ irqreturn_t fsl_otg_isr(int irq, void *d
 
 		if (fsm->id) {	/* switch to gadget */
 			schedule_delayed_work(&((struct fsl_otg *)
-						dev_id)->otg_event, 25);
+						dev_id)->otg_event_delayed, 25);
 		} else {	/* switch to host */
 			cancel_delayed_work(
-					&((struct fsl_otg *)dev_id)->otg_event);
+				&((struct fsl_otg *)dev_id)->otg_event_delayed);
 			fsl_otg_start_gadget(fsm, 0);
 			otg_drv_vbus(fsm, 1);
 			fsl_otg_start_host(fsm, 1);
@@ -726,7 +688,7 @@ static int fsl_otg_conf(struct platform_
 	DBG("set dr_mem_map to 0x%p", pdata->regs);
 	spin_lock_init(&usb_dr_regs_lock);
 
-	INIT_DELAYED_WORK(&fsl_otg_tc->otg_event, fsl_otg_event);
+	INIT_WORK(&fsl_otg_tc->otg_event_delayed, fsl_otg_event, fsl_otg_tc);
 
 	INIT_LIST_HEAD(&active_timers);
 	status = fsl_otg_init_timers(&fsl_otg_tc->fsm);
@@ -1010,7 +972,7 @@ static int __init fsl_otg_probe(struct p
 	return status;
 }
 
-static int __exit fsl_otg_remove(struct platform_device *pdev)
+static int __devexit fsl_otg_remove(struct platform_device *pdev)
 {
 	u32 ie;
 	struct fsl_usb2_platform_data *pdata;
@@ -1045,7 +1007,7 @@ static int __exit fsl_otg_remove(struct 
 
 struct platform_driver fsl_otg_driver = {
 	.probe = fsl_otg_probe,
-	.remove = fsl_otg_remove,
+	.remove = __devexit_p(fsl_otg_remove),
 	.driver = {
 		   .name = "fsl_arc",
 		   .owner = THIS_MODULE,
Index: linux-2.6.18/drivers/usb/otg/fsl_otg.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/otg/fsl_otg.h
+++ linux-2.6.18/drivers/usb/otg/fsl_otg.h
@@ -222,7 +222,7 @@ struct fsl_otg {
 	struct otg_transceiver otg;
 	struct otg_fsm fsm;
 	struct usb_dr_mmap *dr_mem_map;
-	struct delayed_work otg_event;
+	struct work_struct otg_event_delayed;
 
 	/*used for usb host */
 	u8 host_working;
Index: linux-2.6.18/mvl_patches/pro50-0979.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-0979.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(979);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

