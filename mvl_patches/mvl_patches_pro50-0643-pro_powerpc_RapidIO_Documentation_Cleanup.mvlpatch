#! /usr/bin/env bash
# Patch: -pro_powerpc_RapidIO_Documentation_Cleanup
# Date: Fri Dec  7 15:19:00 2007
# Source: MontaVista Software, Inc.
# MR: 25773
# Type: Enhancement
# Disposition: needs submitting to linuxppc-dev@ozlabs.org
# Signed-off-by Randy Vinson <rvinson@mvista.com>
# Description:
# RapidIO: Documentation Cleanup
# 
# Cleaning up for DocBook.
# 
# Signed-off-by Randy Vinson <rvinson@mvista.com>

PATCHNUM=643
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 25773
Type: Enhancement
Disposition: needs submitting to linuxppc-dev@ozlabs.org
Signed-off-by Randy Vinson <rvinson@mvista.com>
Description:
RapidIO: Documentation Cleanup

Cleaning up for DocBook.

Signed-off-by Randy Vinson <rvinson@mvista.com>
Index: linux-2.6.18/Documentation/DocBook/rapidio.tmpl
===================================================================
--- linux-2.6.18.orig/Documentation/DocBook/rapidio.tmpl
+++ linux-2.6.18/Documentation/DocBook/rapidio.tmpl
@@ -132,10 +132,9 @@
      <sect1><title>Sysfs support</title>
 !Idrivers/rapidio/rio-sysfs.c
      </sect1>
-     <sect1><title>PPC32 support</title>
-!Iarch/ppc/kernel/rio.c
-!Earch/ppc/syslib/ppc85xx_rio.c
-!Iarch/ppc/syslib/ppc85xx_rio.c
+     <sect1><title>Freescale PowerPC support</title>
+!Earch/powerpc/sysdev/fsl_rio.c
+!Iarch/powerpc/sysdev/fsl_rio.c
      </sect1>
   </chapter>
 
Index: linux-2.6.18/arch/powerpc/sysdev/fsl_rio.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/sysdev/fsl_rio.c
+++ linux-2.6.18/arch/powerpc/sysdev/fsl_rio.c
@@ -210,6 +210,7 @@ struct rio_priv {
 
 /**
  * fsl_rio_doorbell_send - Send a PowerPC doorbell message
+ * @mport: The RIO Master port
  * @index: ID of RapidIO interface
  * @destid: Destination ID of target device
  * @data: 16-bit info field of RapidIO doorbell message
@@ -245,6 +246,7 @@ static int fsl_rio_doorbell_send(struct 
 
 /**
  * fsl_local_config_read - Generate a PowerPC local config space read
+ * @mport: The RIO Master port
  * @index: ID of RapdiIO interface
  * @offset: Offset into configuration space
  * @len: Length (in bytes) of the maintenance transaction
@@ -265,6 +267,7 @@ static int fsl_local_config_read(struct 
 
 /**
  * fsl_local_config_write - Generate a PowerPC local config space write
+ * @mport: The RIO Master port
  * @index: ID of RapdiIO interface
  * @offset: Offset into configuration space
  * @len: Length (in bytes) of the maintenance transaction
@@ -285,6 +288,7 @@ static int fsl_local_config_write(struct
 
 /**
  * fsl_rio_config_read - Generate a PowerPC read maintenance transaction
+ * @mport: The RIO Master port
  * @index: ID of RapdiIO interface
  * @destid: Destination ID of transaction
  * @hopcount: Number of hops to target device
@@ -327,6 +331,7 @@ static int fsl_rio_config_read(struct ri
 
 /**
  * fsl_rio_config_write - Generate a PowerPC write maintenance transaction
+ * @mport: The RIO Master port
  * @index: ID of RapdiIO interface
  * @destid: Destination ID of transaction
  * @hopcount: Number of hops to target device
@@ -368,6 +373,7 @@ static int fsl_rio_config_write(struct r
 
 /**
  * fsl_rio_map_inb_mem -- Mapping inbound memory region.
+ * @mport: The RIO Master port
  * @lstart: Local memory space start address.
  * @rstart: RapidIO space start address.
  * @size: The mapping region size.
@@ -432,6 +438,7 @@ static int fsl_rio_map_inb_mem(struct ri
 
 /**
  * fsl_rio_map_outb_mem -- Mapping outbound memory region.
+ * @mport: The RIO Master port
  * @lstart: Local memory space start address.
  * @rstart: RapidIO space start address.
  * @size: The mapping region size.
@@ -501,6 +508,7 @@ static int fsl_rio_map_outb_mem(struct r
 
 /**
  * fsl_rio_unmap_inb_mem -- Unmapping inbound memory region.
+ * @mport: The RIO Master port
  * @lstart: Local memory space start address.
  */
 static void fsl_rio_unmap_inb_mem(struct rio_mport *mport, resource_size_t lstart)
@@ -523,6 +531,7 @@ static void fsl_rio_unmap_inb_mem(struct
 
 /**
  * fsl_rio_unmap_inb_mem -- Unmapping outbound memory region.
+ * @mport: The RIO Master port
  * @lstart: Local memory space start address.
  */
 static void fsl_rio_unmap_outb_mem(struct rio_mport *mport, resource_size_t lstart)
@@ -1067,6 +1076,7 @@ static irqreturn_t fsl_rio_dbell_handler
 /**
  * fsl_rio_doorbell_init - PowerPC doorbell interface init
  * @mport: Master port implementing the inbound doorbell unit
+ * @dbaddr: doorbell window address
  *
  * Initializes doorbell unit hardware and inbound DMA buffer
  * ring. Called from fsl_rio_setup(). Returns %0 on success
@@ -1234,6 +1244,7 @@ static int of_cells_get(struct device_no
 
 /**
  * fsl_rio_setup - Setup PowerPC RapidIO interface
+ * @dev: OF Device
  *
  * Initializes PowerPC RapidIO hardware interface, configures
  * master port with system-specific info, and registers the
Index: linux-2.6.18/drivers/rapidio/rio.c
===================================================================
--- linux-2.6.18.orig/drivers/rapidio/rio.c
+++ linux-2.6.18/drivers/rapidio/rio.c
@@ -350,7 +350,7 @@ int rio_release_outb_dbell(struct rio_de
  * @start: IO resource start address
  * @size: IO resource size
  * @name: Resource name
- * @flag: Flag for resource
+ * @flags: Flag for resource
  * @res: Return resource which has been allocated. If res == NULL,
  *       the function will alloc the memory for return resource.
  *
Index: linux-2.6.18/include/linux/rio.h
===================================================================
--- linux-2.6.18.orig/include/linux/rio.h
+++ linux-2.6.18/include/linux/rio.h
@@ -163,8 +163,12 @@ enum rio_phy_type {
  * @outb_msg: RIO outbound message event descriptors
  * @host_deviceid: Host device ID associated with this master port
  * @ops: configuration space functions
+ * @mops: memory mapping/unmapping functions
  * @id: Port ID, unique among all ports
  * @index: Port index, unique among all port interfaces of the same type
+ * @sys_size: transport size
+ * @phy_type: Phy type
+ * @priv: private data
  * @name: Port name string
  */
 struct rio_mport {
@@ -321,7 +325,7 @@ struct rio_route_ops {
 };
 
 /**
- * Struct for RIO memory definition.
+ * struct rio_mem - RIO memory definition.
  * @node: Node in list of memories
  * @virt: The virtual address for mapped memory accessing.
  * @owner: The owner id of this memory.
@@ -339,7 +343,7 @@ struct rio_mem {
 };
 
 /**
- * Struct for RIO memory definition.
+ * struct rio_mem_ops - RIO memory operations
  * @map_inb: The function for mapping inbound memory window.
  * @map_outb: The function for mapping outbound memory window.
  * @unmap_inb: The function for unmapping inbound memory window.
Index: linux-2.6.18/mvl_patches/pro50-0643.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-0643.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(643);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

