#! /usr/bin/env bash
# Patch: -MVL_POWERPC_4xx_Use_machine_device_initcall_for_bus_p
# Date: Wed Jun 11 14:49:53 2008
# MR: 27840
# Adjustments:
#     Removed ep405 part, since it's not supported.
# 
# From 3f8c5c3b4d07fa24e7081a54798ddfab7360a102 Mon Sep 17 00:00:00 2001
# From: Josh Boyer <jwboyer@linux.vnet.ibm.com>
# Date: Mon, 24 Dec 2007 10:42:02 -0600
# Subject: [PATCH] [POWERPC] 4xx: Use machine_device_initcall for bus probe
# 
# Some machine_xx_initcall macros were recently added that check for the machine
# type before calling the function.  This converts the 4xx platforms to use those
# for bus probing.
# 
# Follows  v2.6.24-rc6 (Linux 2.6.24-rc6)
# Precedes v2.6.25-rc1 (Linux 2.6.25-rc1)
# 
# Signed-off-by: Josh Boyer <jwboyer@linux.vnet.ibm.com>

PATCHNUM=1182
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
MR: 27840
Adjustments:
    Removed ep405 part, since it's not supported.

From 3f8c5c3b4d07fa24e7081a54798ddfab7360a102 Mon Sep 17 00:00:00 2001
From: Josh Boyer <jwboyer@linux.vnet.ibm.com>
Date: Mon, 24 Dec 2007 10:42:02 -0600
Subject: [PATCH] [POWERPC] 4xx: Use machine_device_initcall for bus probe

Some machine_xx_initcall macros were recently added that check for the machine
type before calling the function.  This converts the 4xx platforms to use those
for bus probing.

Follows  v2.6.24-rc6 (Linux 2.6.24-rc6)
Precedes v2.6.25-rc1 (Linux 2.6.25-rc1)

Signed-off-by: Josh Boyer <jwboyer@linux.vnet.ibm.com>
Index: linux-2.6.18/arch/powerpc/platforms/40x/kilauea.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/40x/kilauea.c
+++ linux-2.6.18/arch/powerpc/platforms/40x/kilauea.c
@@ -30,14 +30,11 @@ static __initdata struct of_device_id ki
 
 static int __init kilauea_device_probe(void)
 {
-	if (!machine_is(kilauea))
-		return 0;
-
 	of_platform_bus_probe(NULL, kilauea_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(kilauea_device_probe);
+machine_device_initcall(kilauea, kilauea_device_probe);
 
 static int __init kilauea_probe(void)
 {
Index: linux-2.6.18/arch/powerpc/platforms/40x/makalu.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/40x/makalu.c
+++ linux-2.6.18/arch/powerpc/platforms/40x/makalu.c
@@ -30,14 +30,11 @@ static __initdata struct of_device_id ma
 
 static int __init makalu_device_probe(void)
 {
-	if (!machine_is(makalu))
-		return 0;
-
 	of_platform_bus_probe(NULL, makalu_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(makalu_device_probe);
+machine_device_initcall(makalu, makalu_device_probe);
 
 static int __init makalu_probe(void)
 {
Index: linux-2.6.18/arch/powerpc/platforms/40x/virtex.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/40x/virtex.c
+++ linux-2.6.18/arch/powerpc/platforms/40x/virtex.c
@@ -17,14 +17,11 @@
 
 static int __init virtex_device_probe(void)
 {
-	if (!machine_is(virtex))
-		return 0;
-
 	of_platform_bus_probe(NULL, NULL, NULL);
 
 	return 0;
 }
-device_initcall(virtex_device_probe);
+machine_device_initcall(virtex, virtex_device_probe);
 
 static int __init virtex_probe(void)
 {
Index: linux-2.6.18/arch/powerpc/platforms/40x/walnut.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/40x/walnut.c
+++ linux-2.6.18/arch/powerpc/platforms/40x/walnut.c
@@ -34,14 +34,11 @@ static __initdata struct of_device_id wa
 
 static int __init walnut_device_probe(void)
 {
-	if (!machine_is(walnut))
-		return 0;
-
 	of_platform_bus_probe(NULL, walnut_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(walnut_device_probe);
+machine_device_initcall(walnut, walnut_device_probe);
 
 static int __init walnut_probe(void)
 {
Index: linux-2.6.18/arch/powerpc/platforms/44x/bamboo.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/44x/bamboo.c
+++ linux-2.6.18/arch/powerpc/platforms/44x/bamboo.c
@@ -33,14 +33,11 @@ static __initdata struct of_device_id ba
 
 static int __init bamboo_device_probe(void)
 {
-	if (!machine_is(bamboo))
-		return 0;
-
 	of_platform_bus_probe(NULL, bamboo_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(bamboo_device_probe);
+machine_device_initcall(bamboo, bamboo_device_probe);
 
 static int __init bamboo_probe(void)
 {
Index: linux-2.6.18/arch/powerpc/platforms/44x/ebony.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/44x/ebony.c
+++ linux-2.6.18/arch/powerpc/platforms/44x/ebony.c
@@ -36,14 +36,11 @@ static __initdata struct of_device_id eb
 
 static int __init ebony_device_probe(void)
 {
-	if (!machine_is(ebony))
-		return 0;
-
 	of_platform_bus_probe(NULL, ebony_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(ebony_device_probe);
+machine_device_initcall(ebony, ebony_device_probe);
 
 /*
  * Called very early, MMU is off, device-tree isn't unflattened
Index: linux-2.6.18/arch/powerpc/platforms/44x/katmai.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/44x/katmai.c
+++ linux-2.6.18/arch/powerpc/platforms/44x/katmai.c
@@ -34,14 +34,11 @@ static __initdata struct of_device_id ka
 
 static int __init katmai_device_probe(void)
 {
-	if (!machine_is(katmai))
-		return 0;
-
 	of_platform_bus_probe(NULL, katmai_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(katmai_device_probe);
+machine_device_initcall(katmai, katmai_device_probe);
 
 static int __init katmai_probe(void)
 {
Index: linux-2.6.18/arch/powerpc/platforms/44x/rainier.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/44x/rainier.c
+++ linux-2.6.18/arch/powerpc/platforms/44x/rainier.c
@@ -32,14 +32,11 @@ static __initdata struct of_device_id ra
 
 static int __init rainier_device_probe(void)
 {
-	if (!machine_is(rainier))
-		return 0;
-
 	of_platform_bus_probe(NULL, rainier_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(rainier_device_probe);
+machine_device_initcall(rainier, rainier_device_probe);
 
 static int __init rainier_probe(void)
 {
Index: linux-2.6.18/arch/powerpc/platforms/44x/sequoia.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/44x/sequoia.c
+++ linux-2.6.18/arch/powerpc/platforms/44x/sequoia.c
@@ -33,14 +33,11 @@ static __initdata struct of_device_id se
 
 static int __init sequoia_device_probe(void)
 {
-	if (!machine_is(sequoia))
-		return 0;
-
 	of_platform_bus_probe(NULL, sequoia_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(sequoia_device_probe);
+machien_device_initcall(sequoia, sequoia_device_probe);
 
 static int __init sequoia_probe(void)
 {
Index: linux-2.6.18/arch/powerpc/platforms/44x/taishan.c
===================================================================
--- linux-2.6.18.orig/arch/powerpc/platforms/44x/taishan.c
+++ linux-2.6.18/arch/powerpc/platforms/44x/taishan.c
@@ -41,14 +41,11 @@ static __initdata struct of_device_id ta
 
 static int __init taishan_device_probe(void)
 {
-	if (!machine_is(taishan))
-		return 0;
-
 	of_platform_bus_probe(NULL, taishan_of_bus, NULL);
 
 	return 0;
 }
-device_initcall(taishan_device_probe);
+machine_device_initcall(taishan, taishan_device_probe);
 
 /*
  * Called very early, MMU is off, device-tree isn't unflattened
Index: linux-2.6.18/mvl_patches/pro50-1182.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1182.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1182);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

